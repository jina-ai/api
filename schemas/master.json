{"$id": "https://api.jina.ai/schemas/3.12.1.json", "$schema": "http://json-schema.org/draft-07/schema#", "definitions": {"Jina::Deployment": {"additionalProperties": false, "description": "Define the config of a Deployment.", "items": {"minItems": 1, "type": "string", "uniqueItems": true}, "properties": {"compression": {"default": null, "description": "The compression mechanism used when sending requests from the Head to the WorkerRuntimes. For more details, check https://grpc.github.io/grpc/python/grpc.html#compression.", "enum": ["NoCompression", "Deflate", "Gzip"], "type": "string"}, "connection_list": {"default": null, "description": "dictionary JSON with a list of connections to configure", "type": "string"}, "disable_auto_volume": {"default": false, "description": "Do not automatically mount a volume for dockerized Executors.", "type": "boolean"}, "docker_kwargs": {"default": null, "description": "Dictionary of kwargs arguments that will be passed to Docker SDK when starting the docker '\ncontainer. \n\nMore details can be found in the Docker SDK docs:  https://docker-py.readthedocs.io/en/stable/", "type": "object"}, "entrypoint": {"default": null, "description": "The entrypoint command overrides the ENTRYPOINT in Docker image. when not set then the Docker image ENTRYPOINT takes effective.", "type": "string"}, "env": {"default": null, "description": "The map of environment variables that are available inside runtime", "type": "object"}, "exit_on_exceptions": {"default": [], "description": "List of exceptions that will cause the Executor to shut down.", "type": "array"}, "external": {"default": false, "description": "The Deployment will be considered an external Deployment that has been started independently from the Flow.This Deployment will not be context managed by the Flow.", "type": "boolean"}, "floating": {"default": false, "description": "If set, the current Pod/Deployment can not be further chained, and the next `.add()` will chain after the last Pod/Deployment not this current one.", "type": "boolean"}, "force_update": {"default": false, "description": "If set, always pull the latest Hub Executor bundle even it exists on local", "type": "boolean"}, "gpus": {"default": null, "description": "This argument allows dockerized Jina Executors to discover local gpu devices.\n    \n    Note, \n    - To access all gpus, use `--gpus all`.\n    - To access multiple gpus, e.g. make use of 2 gpus, use `--gpus 2`.\n    - To access specified gpus based on device id, use `--gpus device=[YOUR-GPU-DEVICE-ID]`\n    - To access specified gpus based on multiple device id, use `--gpus device=[YOUR-GPU-DEVICE-ID1],device=[YOUR-GPU-DEVICE-ID2]`\n    - To specify more parameters, use `--gpus device=[YOUR-GPU-DEVICE-ID],runtime=nvidia,capabilities=display", "type": "string"}, "grpc_metadata": {"default": null, "description": "The metadata to be passed to the gRPC request.", "type": "object"}, "grpc_server_options": {"default": null, "description": "Dictionary of kwargs arguments that will be passed to the grpc server as options when starting the server, example : {'grpc.max_send_message_length': -1}", "type": "object"}, "host": {"default": ["0.0.0.0"], "description": "The host of the Gateway, which the client should connect to, by default it is 0.0.0.0. In the case of an external Executor (`--external` or `external=True`) this can be a list of hosts.  Then, every resulting address will be considered as one replica of the Executor.", "type": "array"}, "install_requirements": {"default": false, "description": "If set, install `requirements.txt` in the Hub Executor bundle to local", "type": "boolean"}, "log_config": {"default": "default", "description": "The YAML config of the logger used in this object.", "type": "string"}, "method": {"default": "add", "description": "The method to use when appending the Deployment to the Flow", "enum": ["add", "needs", "inspect", "needs_all", "gather_inspect"], "type": "string"}, "metrics": {"default": false, "description": "If set, the sdk implementation of the OpenTelemetry metrics will be available for default monitoring and custom measurements. Otherwise a no-op implementation will be provided.", "type": "boolean"}, "metrics_exporter_host": {"default": null, "description": "If tracing is enabled, this hostname will be used to configure the metrics exporter agent.", "type": "string"}, "metrics_exporter_port": {"default": null, "description": "If tracing is enabled, this port will be used to configure the metrics exporter agent.", "type": "number"}, "monitoring": {"default": false, "description": "If set, spawn an http server with a prometheus endpoint to expose metrics", "type": "boolean"}, "name": {"default": null, "description": "The name of this object.\n\n    This will be used in the following places:\n    - how you refer to this object in Python/YAML/CLI\n    - visualization\n    - log message header\n    - ...\n\n    When not given, then the default naming strategy will apply.", "type": "string"}, "native": {"default": false, "description": "If set, only native Executors is allowed, and the Executor is always run inside WorkerRuntime.", "type": "boolean"}, "needs": {"description": "The name of the Deployment(s) that this Deployment receives data from. One can also use `gateway` to indicate the connection with the gateway.\nThis is useful to create parallelization. By default the Flow always works sequentially following the defined order of the Deployments.", "items": {"minItems": 1, "type": "string", "uniqueItems": true}, "type": ["array", "string"]}, "no_reduce": {"default": false, "description": "Disable the built-in reduction mechanism. Set this if the reduction is to be handled by the Executor itself by operating on a `docs_matrix` or `docs_map`", "type": "boolean"}, "output_array_type": {"default": null, "description": "The type of array `tensor` and `embedding` will be serialized to.\n\nSupports the same types as `docarray.to_protobuf(.., ndarray_type=...)`, which can be found \n`here <https://docarray.jina.ai/fundamentals/document/serialization/#from-to-protobuf>`.\nDefaults to retaining whatever type is returned by the Executor.", "type": "string"}, "polling": {"default": "ANY", "description": "The polling strategy of the Deployment and its endpoints (when `shards>1`).\n    Can be defined for all endpoints of a Deployment or by endpoint.\n    Define per Deployment:\n    - ANY: only one (whoever is idle) Pod polls the message\n    - ALL: all Pods poll the message (like a broadcast)\n    Define per Endpoint:\n    JSON dict, {endpoint: PollingType}\n    {'/custom': 'ALL', '/search': 'ANY', '*': 'ANY'}", "type": "string"}, "port": {"default": [55924], "description": "The port for input data to bind to, default is a random port between [49152, 65535]. In the case of an external Executor (`--external` or `external=True`) this can be a list of ports. Then, every resulting address will be considered as one replica of the Executor.", "type": "number"}, "port_monitoring": {"default": [54538], "description": "The port on which the prometheus server is exposed, default is a random port between [49152, 65535]", "type": "number"}, "py_modules": {"default": null, "description": "The customized python modules need to be imported before loading the executor\n\nNote that the recommended way is to only import a single module - a simple python file, if your\nexecutor can be defined in a single file, or an ``__init__.py`` file if you have multiple files,\nwhich should be structured as a python package. For more details, please see the\n`Executor cookbook <https://docs.jina.ai/concepts/executor/executor-files/>`__", "type": "array"}, "quiet": {"default": false, "description": "If set, then no log will be emitted from this object.", "type": "boolean"}, "quiet_error": {"default": false, "description": "If set, then exception stack information will not be added to the log", "type": "boolean"}, "reload": {"default": false, "description": "If set, the Executor will restart while serving if YAML configuration source or Executor modules are changed. If YAML configuration is changed, the whole deployment is reloaded and new processes will be restarted. If only Python modules of the Executor have changed, they will be reloaded to the interpreter without restarting process.", "type": "boolean"}, "replicas": {"default": 1, "description": "The number of replicas in the deployment", "type": "number"}, "retries": {"default": -1, "description": "Number of retries per gRPC call. If <0 it defaults to max(3, num_replicas)", "type": "number"}, "runtime_cls": {"default": "WorkerRuntime", "description": "The runtime class to run inside the Pod", "type": "string"}, "shards": {"default": 1, "description": "The number of shards in the deployment running at the same time. For more details check https://docs.jina.ai/concepts/flow/create-flow/#complex-flow-topologies", "type": "number"}, "timeout_ctrl": {"default": 60, "description": "The timeout in milliseconds of the control request, -1 for waiting forever", "type": "number"}, "timeout_ready": {"default": 600000, "description": "The timeout in milliseconds of a Pod waits for the runtime to be ready, -1 for waiting forever", "type": "number"}, "timeout_send": {"default": null, "description": "The timeout in milliseconds used when sending data requests to Executors, -1 means no timeout, disabled by default", "type": "number"}, "tls": {"default": false, "description": "If set, connect to deployment using tls encryption", "type": "boolean"}, "traces_exporter_host": {"default": null, "description": "If tracing is enabled, this hostname will be used to configure the trace exporter agent.", "type": "string"}, "traces_exporter_port": {"default": null, "description": "If tracing is enabled, this port will be used to configure the trace exporter agent.", "type": "number"}, "tracing": {"default": false, "description": "If set, the sdk implementation of the OpenTelemetry tracer will be available and will be enabled for automatic tracing of requests and customer span creation. Otherwise a no-op implementation will be provided.", "type": "boolean"}, "uses": {"default": "BaseExecutor", "description": "The config of the executor, it could be one of the followings:\n        * the string literal of an Executor class name\n        * an Executor YAML file (.yml, .yaml, .jaml)\n        * a Jina Hub Executor (must start with `jinahub://` or `jinahub+docker://`)\n        * a docker image (must start with `docker://`)\n        * the string literal of a YAML config (must start with `!` or `jtype: `)\n        * the string literal of a JSON config\n\n        When use it under Python, one can use the following values additionally:\n        - a Python dict that represents the config\n        - a text file stream has `.read()` interface", "type": "string"}, "uses_after": {"default": null, "description": "The executor attached after the Pods described by --uses, typically used for receiving from all shards, accepted type follows `--uses`. This argument only applies for sharded Deployments (shards > 1).", "type": "string"}, "uses_after_address": {"default": null, "description": "The address of the uses-before runtime", "type": "string"}, "uses_before": {"default": null, "description": "The executor attached before the Pods described by --uses, typically before sending to all shards, accepted type follows `--uses`. This argument only applies for sharded Deployments (shards > 1).", "type": "string"}, "uses_before_address": {"default": null, "description": "The address of the uses-before runtime", "type": "string"}, "uses_dynamic_batching": {"default": null, "description": "Dictionary of keyword arguments that will override the `dynamic_batching` configuration in `uses`", "type": "object"}, "uses_metas": {"default": null, "description": "Dictionary of keyword arguments that will override the `metas` configuration in `uses`", "type": "object"}, "uses_requests": {"default": null, "description": "Dictionary of keyword arguments that will override the `requests` configuration in `uses`", "type": "object"}, "uses_with": {"default": null, "description": "Dictionary of keyword arguments that will override the `with` configuration in `uses`", "type": "object"}, "volumes": {"default": null, "description": "The path on the host to be mounted inside the container. \n\nNote, \n- If separated by `:`, then the first part will be considered as the local host path and the second part is the path in the container system. \n- If no split provided, then the basename of that directory will be mounted into container's root path, e.g. `--volumes=\"/user/test/my-workspace\"` will be mounted into `/my-workspace` inside the container. \n- All volumes are mounted with read-write mode.", "type": "array"}, "when": {"default": null, "description": "The condition that the documents need to fulfill before reaching the Executor.The condition can be defined in the form of a `DocArray query condition <https://docarray.jina.ai/fundamentals/documentarray/find/#query-by-conditions>`", "type": "object"}, "workspace": {"default": null, "description": "The working directory for any IO operations in this object. If not set, then derive from its parent `workspace`.", "type": "string"}}, "required": [], "type": "object"}, "Jina::Executors::All": {"minItems": 1, "type": "array"}, "Jina::Flow": {"additionalProperties": false, "properties": {"executors": {"description": "Define the steps in the Flow.\nA Deployment is a container and interface for one or multiple Pods that have the same properties.", "items": {"$ref": "#/definitions/Jina::Deployment"}, "minItems": 1, "type": "array"}, "gateway": {"additionalProperties": false, "description": "The config of a Jina Gateway. A Gateway is a pod that encapsulates Flow logic and exposes services to the internet.", "items": {"minItems": 1, "type": "string", "uniqueItems": true}, "properties": {"compression": {"default": null, "description": "The compression mechanism used when sending requests from the Head to the WorkerRuntimes. For more details, check https://grpc.github.io/grpc/python/grpc.html#compression.", "enum": ["NoCompression", "Deflate", "Gzip"], "type": "string"}, "cors": {"default": false, "description": "If set, a CORS middleware is added to FastAPI frontend to allow cross-origin access.", "type": "boolean"}, "deployments_addresses": {"default": "{}", "description": "JSON dictionary with the input addresses of each Deployment", "type": "string"}, "deployments_metadata": {"default": "{}", "description": "JSON dictionary with the request metadata for each Deployment", "type": "string"}, "deployments_no_reduce": {"default": "[]", "description": "list JSON disabling the built-in merging mechanism for each Deployment listed", "type": "string"}, "description": {"default": null, "description": "The description of this HTTP server. It will be used in automatics docs such as Swagger UI.", "type": "string"}, "docker_kwargs": {"default": null, "description": "Dictionary of kwargs arguments that will be passed to Docker SDK when starting the docker '\ncontainer. \n\nMore details can be found in the Docker SDK docs:  https://docker-py.readthedocs.io/en/stable/", "type": "object"}, "entrypoint": {"default": null, "description": "The entrypoint command overrides the ENTRYPOINT in Docker image. when not set then the Docker image ENTRYPOINT takes effective.", "type": "string"}, "env": {"default": null, "description": "The map of environment variables that are available inside runtime", "type": "object"}, "expose_endpoints": {"default": null, "description": "A JSON string that represents a map from executor endpoints (`@requests(on=...)`) to HTTP endpoints.", "type": "string"}, "expose_graphql_endpoint": {"default": false, "description": "If set, /graphql endpoint is added to HTTP interface.", "type": "boolean"}, "floating": {"default": false, "description": "If set, the current Pod/Deployment can not be further chained, and the next `.add()` will chain after the last Pod/Deployment not this current one.", "type": "boolean"}, "graph_conditions": {"default": "{}", "description": "Dictionary stating which filtering conditions each Executor in the graph requires to receive Documents.", "type": "string"}, "graph_description": {"default": "{}", "description": "Routing graph for the gateway", "type": "string"}, "grpc_server_options": {"default": null, "description": "Dictionary of kwargs arguments that will be passed to the grpc server as options when starting the server, example : {'grpc.max_send_message_length': -1}", "type": "object"}, "host": {"default": "0.0.0.0", "description": "The host address of the runtime, by default it is 0.0.0.0.", "type": "string"}, "log_config": {"default": "default", "description": "The YAML config of the logger used in this object.", "type": "string"}, "metrics": {"default": false, "description": "If set, the sdk implementation of the OpenTelemetry metrics will be available for default monitoring and custom measurements. Otherwise a no-op implementation will be provided.", "type": "boolean"}, "metrics_exporter_host": {"default": null, "description": "If tracing is enabled, this hostname will be used to configure the metrics exporter agent.", "type": "string"}, "metrics_exporter_port": {"default": null, "description": "If tracing is enabled, this port will be used to configure the metrics exporter agent.", "type": "number"}, "monitoring": {"default": false, "description": "If set, spawn an http server with a prometheus endpoint to expose metrics", "type": "boolean"}, "name": {"default": "gateway", "description": "The name of this object.\n\n    This will be used in the following places:\n    - how you refer to this object in Python/YAML/CLI\n    - visualization\n    - log message header\n    - ...\n\n    When not given, then the default naming strategy will apply.", "type": "string"}, "no_crud_endpoints": {"default": false, "description": "If set, `/index`, `/search`, `/update`, `/delete` endpoints are removed from HTTP interface.\n\n        Any executor that has `@requests(on=...)` bound with those values will receive data requests.", "type": "boolean"}, "no_debug_endpoints": {"default": false, "description": "If set, `/status` `/post` endpoints are removed from HTTP interface.", "type": "boolean"}, "port": {"default": null, "description": "The port for input data to bind the gateway server to, by default, random ports between range [49152, 65535] will be assigned. The port argument can be either 1 single value in case only 1 protocol is used or multiple values when many protocols are used.", "type": "number"}, "port_monitoring": {"default": [57907], "description": "The port on which the prometheus server is exposed, default is a random port between [49152, 65535]", "type": "number"}, "prefetch": {"default": 1000, "description": "Number of requests fetched from the client before feeding into the first Executor. \n    \n    Used to control the speed of data input into a Flow. 0 disables prefetch (1000 requests is the default)", "type": "number"}, "protocol": {"default": [0], "description": "Communication protocol of the server exposed by the Gateway. This can be a single value or a list of protocols, depending on your chosen Gateway. Choose the convenient protocols from: ['GRPC', 'HTTP', 'WEBSOCKET'].", "enum": ["GRPC", "HTTP", "WEBSOCKET"], "type": "array"}, "proxy": {"default": false, "description": "If set, respect the http_proxy and https_proxy environment variables. otherwise, it will unset these proxy variables before start. gRPC seems to prefer no proxy", "type": "boolean"}, "py_modules": {"default": null, "description": "The customized python modules need to be imported before loading the gateway\n\nNote that the recommended way is to only import a single module - a simple python file, if your\ngateway can be defined in a single file, or an ``__init__.py`` file if you have multiple files,\nwhich should be structured as a python package.", "type": "array"}, "quiet": {"default": false, "description": "If set, then no log will be emitted from this object.", "type": "boolean"}, "quiet_error": {"default": false, "description": "If set, then exception stack information will not be added to the log", "type": "boolean"}, "reload": {"default": false, "description": "If set, the Gateway will restart while serving if YAML configuration source is changed.", "type": "boolean"}, "retries": {"default": -1, "description": "Number of retries per gRPC call. If <0 it defaults to max(3, num_replicas)", "type": "number"}, "runtime_cls": {"default": "GatewayRuntime", "description": "The runtime class to run inside the Pod", "type": "string"}, "ssl_certfile": {"default": null, "description": "the path to the certificate file", "type": "string"}, "ssl_keyfile": {"default": null, "description": "the path to the key file", "type": "string"}, "timeout_ctrl": {"default": 60, "description": "The timeout in milliseconds of the control request, -1 for waiting forever", "type": "number"}, "timeout_ready": {"default": 600000, "description": "The timeout in milliseconds of a Pod waits for the runtime to be ready, -1 for waiting forever", "type": "number"}, "timeout_send": {"default": null, "description": "The timeout in milliseconds used when sending data requests to Executors, -1 means no timeout, disabled by default", "type": "number"}, "title": {"default": null, "description": "The title of this HTTP server. It will be used in automatics docs such as Swagger UI.", "type": "string"}, "traces_exporter_host": {"default": null, "description": "If tracing is enabled, this hostname will be used to configure the trace exporter agent.", "type": "string"}, "traces_exporter_port": {"default": null, "description": "If tracing is enabled, this port will be used to configure the trace exporter agent.", "type": "number"}, "tracing": {"default": false, "description": "If set, the sdk implementation of the OpenTelemetry tracer will be available and will be enabled for automatic tracing of requests and customer span creation. Otherwise a no-op implementation will be provided.", "type": "boolean"}, "uses": {"default": null, "description": "The config of the gateway, it could be one of the followings:\n        * the string literal of an Gateway class name\n        * a Gateway YAML file (.yml, .yaml, .jaml)\n        * a docker image (must start with `docker://`)\n        * the string literal of a YAML config (must start with `!` or `jtype: `)\n        * the string literal of a JSON config\n\n        When use it under Python, one can use the following values additionally:\n        - a Python dict that represents the config\n        - a text file stream has `.read()` interface", "type": "string"}, "uses_with": {"default": null, "description": "Dictionary of keyword arguments that will override the `with` configuration in `uses`", "type": "object"}, "uvicorn_kwargs": {"default": null, "description": "Dictionary of kwargs arguments that will be passed to Uvicorn server when starting the server\n\nMore details can be found in Uvicorn docs: https://www.uvicorn.org/settings/", "type": "object"}, "workspace": {"default": null, "description": "The working directory for any IO operations in this object. If not set, then derive from its parent `workspace`.", "type": "string"}}, "required": [], "type": "object"}, "jtype": {"default": "Flow", "description": "The type of Jina object (Flow, Executor).\nA Flow is made up of several sub-tasks, and it manages the states and context of these sub-tasks.\nThe input and output data of Flows are Documents.", "enum": ["Flow"], "type": "string"}, "version": {"default": "'1'", "description": "The YAML version of this Flow.", "type": "string"}, "with": {"additionalProperties": false, "description": "The config of Flow, unrecognized config arguments will be applied to all Deployments", "items": {"minItems": 1, "type": "string", "uniqueItems": true}, "properties": {"compression": {"default": null, "description": "The compression mechanism used when sending requests from the Head to the WorkerRuntimes. For more details, check https://grpc.github.io/grpc/python/grpc.html#compression.", "enum": ["NoCompression", "Deflate", "Gzip"], "type": "string"}, "cors": {"default": false, "description": "If set, a CORS middleware is added to FastAPI frontend to allow cross-origin access.", "type": "boolean"}, "deployments_addresses": {"default": "{}", "description": "JSON dictionary with the input addresses of each Deployment", "type": "string"}, "deployments_metadata": {"default": "{}", "description": "JSON dictionary with the request metadata for each Deployment", "type": "string"}, "deployments_no_reduce": {"default": "[]", "description": "list JSON disabling the built-in merging mechanism for each Deployment listed", "type": "string"}, "description": {"default": null, "description": "The description of this HTTP server. It will be used in automatics docs such as Swagger UI.", "type": "string"}, "docker_kwargs": {"default": null, "description": "Dictionary of kwargs arguments that will be passed to Docker SDK when starting the docker '\ncontainer. \n\nMore details can be found in the Docker SDK docs:  https://docker-py.readthedocs.io/en/stable/", "type": "object"}, "entrypoint": {"default": null, "description": "The entrypoint command overrides the ENTRYPOINT in Docker image. when not set then the Docker image ENTRYPOINT takes effective.", "type": "string"}, "env": {"default": null, "description": "The map of environment variables that are available inside runtime", "type": "object"}, "expose_endpoints": {"default": null, "description": "A JSON string that represents a map from executor endpoints (`@requests(on=...)`) to HTTP endpoints.", "type": "string"}, "expose_graphql_endpoint": {"default": false, "description": "If set, /graphql endpoint is added to HTTP interface.", "type": "boolean"}, "floating": {"default": false, "description": "If set, the current Pod/Deployment can not be further chained, and the next `.add()` will chain after the last Pod/Deployment not this current one.", "type": "boolean"}, "graph_conditions": {"default": "{}", "description": "Dictionary stating which filtering conditions each Executor in the graph requires to receive Documents.", "type": "string"}, "graph_description": {"default": "{}", "description": "Routing graph for the gateway", "type": "string"}, "grpc_server_options": {"default": null, "description": "Dictionary of kwargs arguments that will be passed to the grpc server as options when starting the server, example : {'grpc.max_send_message_length': -1}", "type": "object"}, "host": {"default": "0.0.0.0", "description": "The host address of the runtime, by default it is 0.0.0.0.", "type": "string"}, "inspect": {"default": "COLLECT", "description": "The strategy on those inspect deployments in the flow.\n\n    If `REMOVE` is given then all inspect deployments are removed when building the flow.", "enum": ["HANG", "REMOVE", "COLLECT"], "type": "string"}, "log_config": {"default": "default", "description": "The YAML config of the logger used in this object.", "type": "string"}, "metrics": {"default": false, "description": "If set, the sdk implementation of the OpenTelemetry metrics will be available for default monitoring and custom measurements. Otherwise a no-op implementation will be provided.", "type": "boolean"}, "metrics_exporter_host": {"default": null, "description": "If tracing is enabled, this hostname will be used to configure the metrics exporter agent.", "type": "string"}, "metrics_exporter_port": {"default": null, "description": "If tracing is enabled, this port will be used to configure the metrics exporter agent.", "type": "number"}, "monitoring": {"default": false, "description": "If set, spawn an http server with a prometheus endpoint to expose metrics", "type": "boolean"}, "name": {"default": "gateway", "description": "The name of this object.\n\n    This will be used in the following places:\n    - how you refer to this object in Python/YAML/CLI\n    - visualization\n    - log message header\n    - ...\n\n    When not given, then the default naming strategy will apply.", "type": "string"}, "no_crud_endpoints": {"default": false, "description": "If set, `/index`, `/search`, `/update`, `/delete` endpoints are removed from HTTP interface.\n\n        Any executor that has `@requests(on=...)` bound with those values will receive data requests.", "type": "boolean"}, "no_debug_endpoints": {"default": false, "description": "If set, `/status` `/post` endpoints are removed from HTTP interface.", "type": "boolean"}, "port": {"default": null, "description": "The port for input data to bind the gateway server to, by default, random ports between range [49152, 65535] will be assigned. The port argument can be either 1 single value in case only 1 protocol is used or multiple values when many protocols are used.", "type": "number"}, "port_monitoring": {"default": [64381], "description": "The port on which the prometheus server is exposed, default is a random port between [49152, 65535]", "type": "number"}, "prefetch": {"default": 1000, "description": "Number of requests fetched from the client before feeding into the first Executor. \n    \n    Used to control the speed of data input into a Flow. 0 disables prefetch (1000 requests is the default)", "type": "number"}, "protocol": {"default": [0], "description": "Communication protocol of the server exposed by the Gateway. This can be a single value or a list of protocols, depending on your chosen Gateway. Choose the convenient protocols from: ['GRPC', 'HTTP', 'WEBSOCKET'].", "enum": ["GRPC", "HTTP", "WEBSOCKET"], "type": "array"}, "proxy": {"default": false, "description": "If set, respect the http_proxy and https_proxy environment variables. otherwise, it will unset these proxy variables before start. gRPC seems to prefer no proxy", "type": "boolean"}, "py_modules": {"default": null, "description": "The customized python modules need to be imported before loading the gateway\n\nNote that the recommended way is to only import a single module - a simple python file, if your\ngateway can be defined in a single file, or an ``__init__.py`` file if you have multiple files,\nwhich should be structured as a python package.", "type": "array"}, "quiet": {"default": false, "description": "If set, then no log will be emitted from this object.", "type": "boolean"}, "quiet_error": {"default": false, "description": "If set, then exception stack information will not be added to the log", "type": "boolean"}, "reload": {"default": false, "description": "If set, the Gateway will restart while serving if YAML configuration source is changed.", "type": "boolean"}, "retries": {"default": -1, "description": "Number of retries per gRPC call. If <0 it defaults to max(3, num_replicas)", "type": "number"}, "runtime_cls": {"default": "GatewayRuntime", "description": "The runtime class to run inside the Pod", "type": "string"}, "ssl_certfile": {"default": null, "description": "the path to the certificate file", "type": "string"}, "ssl_keyfile": {"default": null, "description": "the path to the key file", "type": "string"}, "timeout_ctrl": {"default": 60, "description": "The timeout in milliseconds of the control request, -1 for waiting forever", "type": "number"}, "timeout_ready": {"default": 600000, "description": "The timeout in milliseconds of a Pod waits for the runtime to be ready, -1 for waiting forever", "type": "number"}, "timeout_send": {"default": null, "description": "The timeout in milliseconds used when sending data requests to Executors, -1 means no timeout, disabled by default", "type": "number"}, "title": {"default": null, "description": "The title of this HTTP server. It will be used in automatics docs such as Swagger UI.", "type": "string"}, "traces_exporter_host": {"default": null, "description": "If tracing is enabled, this hostname will be used to configure the trace exporter agent.", "type": "string"}, "traces_exporter_port": {"default": null, "description": "If tracing is enabled, this port will be used to configure the trace exporter agent.", "type": "number"}, "tracing": {"default": false, "description": "If set, the sdk implementation of the OpenTelemetry tracer will be available and will be enabled for automatic tracing of requests and customer span creation. Otherwise a no-op implementation will be provided.", "type": "boolean"}, "uses": {"default": null, "description": "The config of the gateway, it could be one of the followings:\n        * the string literal of an Gateway class name\n        * a Gateway YAML file (.yml, .yaml, .jaml)\n        * a docker image (must start with `docker://`)\n        * the string literal of a YAML config (must start with `!` or `jtype: `)\n        * the string literal of a JSON config\n\n        When use it under Python, one can use the following values additionally:\n        - a Python dict that represents the config\n        - a text file stream has `.read()` interface", "type": "string"}, "uses_with": {"default": null, "description": "Dictionary of keyword arguments that will override the `with` configuration in `uses`", "type": "object"}, "uvicorn_kwargs": {"default": null, "description": "Dictionary of kwargs arguments that will be passed to Uvicorn server when starting the server\n\nMore details can be found in Uvicorn docs: https://www.uvicorn.org/settings/", "type": "object"}, "workspace": {"default": null, "description": "The working directory for any IO operations in this object. If not set, then derive from its parent `workspace`.", "type": "string"}}, "required": [], "type": "object"}}, "required": ["jtype", "executors"], "type": "object"}, "Jina::Gateway": {"additionalProperties": false, "description": "The config of a Jina Gateway. A Gateway is a pod that encapsulates Flow logic and exposes services to the internet.", "items": {"minItems": 1, "type": "string", "uniqueItems": true}, "properties": {"compression": {"default": null, "description": "The compression mechanism used when sending requests from the Head to the WorkerRuntimes. For more details, check https://grpc.github.io/grpc/python/grpc.html#compression.", "enum": ["NoCompression", "Deflate", "Gzip"], "type": "string"}, "cors": {"default": false, "description": "If set, a CORS middleware is added to FastAPI frontend to allow cross-origin access.", "type": "boolean"}, "deployments_addresses": {"default": "{}", "description": "JSON dictionary with the input addresses of each Deployment", "type": "string"}, "deployments_metadata": {"default": "{}", "description": "JSON dictionary with the request metadata for each Deployment", "type": "string"}, "deployments_no_reduce": {"default": "[]", "description": "list JSON disabling the built-in merging mechanism for each Deployment listed", "type": "string"}, "description": {"default": null, "description": "The description of this HTTP server. It will be used in automatics docs such as Swagger UI.", "type": "string"}, "docker_kwargs": {"default": null, "description": "Dictionary of kwargs arguments that will be passed to Docker SDK when starting the docker '\ncontainer. \n\nMore details can be found in the Docker SDK docs:  https://docker-py.readthedocs.io/en/stable/", "type": "object"}, "entrypoint": {"default": null, "description": "The entrypoint command overrides the ENTRYPOINT in Docker image. when not set then the Docker image ENTRYPOINT takes effective.", "type": "string"}, "env": {"default": null, "description": "The map of environment variables that are available inside runtime", "type": "object"}, "expose_endpoints": {"default": null, "description": "A JSON string that represents a map from executor endpoints (`@requests(on=...)`) to HTTP endpoints.", "type": "string"}, "expose_graphql_endpoint": {"default": false, "description": "If set, /graphql endpoint is added to HTTP interface.", "type": "boolean"}, "floating": {"default": false, "description": "If set, the current Pod/Deployment can not be further chained, and the next `.add()` will chain after the last Pod/Deployment not this current one.", "type": "boolean"}, "graph_conditions": {"default": "{}", "description": "Dictionary stating which filtering conditions each Executor in the graph requires to receive Documents.", "type": "string"}, "graph_description": {"default": "{}", "description": "Routing graph for the gateway", "type": "string"}, "grpc_server_options": {"default": null, "description": "Dictionary of kwargs arguments that will be passed to the grpc server as options when starting the server, example : {'grpc.max_send_message_length': -1}", "type": "object"}, "host": {"default": "0.0.0.0", "description": "The host address of the runtime, by default it is 0.0.0.0.", "type": "string"}, "log_config": {"default": "default", "description": "The YAML config of the logger used in this object.", "type": "string"}, "metrics": {"default": false, "description": "If set, the sdk implementation of the OpenTelemetry metrics will be available for default monitoring and custom measurements. Otherwise a no-op implementation will be provided.", "type": "boolean"}, "metrics_exporter_host": {"default": null, "description": "If tracing is enabled, this hostname will be used to configure the metrics exporter agent.", "type": "string"}, "metrics_exporter_port": {"default": null, "description": "If tracing is enabled, this port will be used to configure the metrics exporter agent.", "type": "number"}, "monitoring": {"default": false, "description": "If set, spawn an http server with a prometheus endpoint to expose metrics", "type": "boolean"}, "name": {"default": "gateway", "description": "The name of this object.\n\n    This will be used in the following places:\n    - how you refer to this object in Python/YAML/CLI\n    - visualization\n    - log message header\n    - ...\n\n    When not given, then the default naming strategy will apply.", "type": "string"}, "no_crud_endpoints": {"default": false, "description": "If set, `/index`, `/search`, `/update`, `/delete` endpoints are removed from HTTP interface.\n\n        Any executor that has `@requests(on=...)` bound with those values will receive data requests.", "type": "boolean"}, "no_debug_endpoints": {"default": false, "description": "If set, `/status` `/post` endpoints are removed from HTTP interface.", "type": "boolean"}, "port": {"default": null, "description": "The port for input data to bind the gateway server to, by default, random ports between range [49152, 65535] will be assigned. The port argument can be either 1 single value in case only 1 protocol is used or multiple values when many protocols are used.", "type": "number"}, "port_monitoring": {"default": [57907], "description": "The port on which the prometheus server is exposed, default is a random port between [49152, 65535]", "type": "number"}, "prefetch": {"default": 1000, "description": "Number of requests fetched from the client before feeding into the first Executor. \n    \n    Used to control the speed of data input into a Flow. 0 disables prefetch (1000 requests is the default)", "type": "number"}, "protocol": {"default": [0], "description": "Communication protocol of the server exposed by the Gateway. This can be a single value or a list of protocols, depending on your chosen Gateway. Choose the convenient protocols from: ['GRPC', 'HTTP', 'WEBSOCKET'].", "enum": ["GRPC", "HTTP", "WEBSOCKET"], "type": "array"}, "proxy": {"default": false, "description": "If set, respect the http_proxy and https_proxy environment variables. otherwise, it will unset these proxy variables before start. gRPC seems to prefer no proxy", "type": "boolean"}, "py_modules": {"default": null, "description": "The customized python modules need to be imported before loading the gateway\n\nNote that the recommended way is to only import a single module - a simple python file, if your\ngateway can be defined in a single file, or an ``__init__.py`` file if you have multiple files,\nwhich should be structured as a python package.", "type": "array"}, "quiet": {"default": false, "description": "If set, then no log will be emitted from this object.", "type": "boolean"}, "quiet_error": {"default": false, "description": "If set, then exception stack information will not be added to the log", "type": "boolean"}, "reload": {"default": false, "description": "If set, the Gateway will restart while serving if YAML configuration source is changed.", "type": "boolean"}, "retries": {"default": -1, "description": "Number of retries per gRPC call. If <0 it defaults to max(3, num_replicas)", "type": "number"}, "runtime_cls": {"default": "GatewayRuntime", "description": "The runtime class to run inside the Pod", "type": "string"}, "ssl_certfile": {"default": null, "description": "the path to the certificate file", "type": "string"}, "ssl_keyfile": {"default": null, "description": "the path to the key file", "type": "string"}, "timeout_ctrl": {"default": 60, "description": "The timeout in milliseconds of the control request, -1 for waiting forever", "type": "number"}, "timeout_ready": {"default": 600000, "description": "The timeout in milliseconds of a Pod waits for the runtime to be ready, -1 for waiting forever", "type": "number"}, "timeout_send": {"default": null, "description": "The timeout in milliseconds used when sending data requests to Executors, -1 means no timeout, disabled by default", "type": "number"}, "title": {"default": null, "description": "The title of this HTTP server. It will be used in automatics docs such as Swagger UI.", "type": "string"}, "traces_exporter_host": {"default": null, "description": "If tracing is enabled, this hostname will be used to configure the trace exporter agent.", "type": "string"}, "traces_exporter_port": {"default": null, "description": "If tracing is enabled, this port will be used to configure the trace exporter agent.", "type": "number"}, "tracing": {"default": false, "description": "If set, the sdk implementation of the OpenTelemetry tracer will be available and will be enabled for automatic tracing of requests and customer span creation. Otherwise a no-op implementation will be provided.", "type": "boolean"}, "uses": {"default": null, "description": "The config of the gateway, it could be one of the followings:\n        * the string literal of an Gateway class name\n        * a Gateway YAML file (.yml, .yaml, .jaml)\n        * a docker image (must start with `docker://`)\n        * the string literal of a YAML config (must start with `!` or `jtype: `)\n        * the string literal of a JSON config\n\n        When use it under Python, one can use the following values additionally:\n        - a Python dict that represents the config\n        - a text file stream has `.read()` interface", "type": "string"}, "uses_with": {"default": null, "description": "Dictionary of keyword arguments that will override the `with` configuration in `uses`", "type": "object"}, "uvicorn_kwargs": {"default": null, "description": "Dictionary of kwargs arguments that will be passed to Uvicorn server when starting the server\n\nMore details can be found in Uvicorn docs: https://www.uvicorn.org/settings/", "type": "object"}, "workspace": {"default": null, "description": "The working directory for any IO operations in this object. If not set, then derive from its parent `workspace`.", "type": "string"}}, "required": [], "type": "object"}, "Jina::Metas": {"additionalProperties": false, "description": "The meta config of the Executor", "properties": {"description": {"default": null, "description": "The description of this executor. It will be used in automatics docs UI", "type": "string"}, "name": {"default": null, "description": "The name of the executor.", "type": "string"}, "py_modules": {"default": null, "description": "\nThe external python module paths. it is useful when you want to load external python modules\nusing :func:`BaseExecutor.load_config` from a YAML file. If a relative path is given then the root path is set to\nthe path of the current YAML file.\n\nExample of ``py_module`` usage:\n\n1. This is a valid structure and it is RECOMMENDED:\n    - \"my_cust_module\" is a python module\n    - all core logic of your customized executor goes to ``__init__.py``\n    - to import ``foo.py``, you can use relative import, e.g. ``from .foo import bar``\n    - ``helper.py`` needs to be put BEFORE `__init__.py` in YAML ``py_modules``\n\nThis is also the structure given by ``jina hub new`` CLI.\n\n    .. highlight:: text\n    .. code-block:: text\n\n         my_cust_module\n           |- __init__.py\n           |- helper.py\n           |- config.yml\n                |- py_modules\n                       |- helper.py\n                       |- __init__.py\n\n2. This is a valid structure but not recommended:\n    - \"my_cust_module\" is not a python module (lack of __init__.py under the root)\n    - to import ``foo.py``, you must to use ``from jinahub.foo import bar``\n    - ``jinahub`` is a common namespace for all plugin-modules, not changeable.\n    - ``helper.py`` needs to be put BEFORE `my_cust.py` in YAML ``py_modules``\n\n    .. highlight:: text\n    .. code-block:: text\n\n         my_cust_module\n           |- my_cust.py\n           |- helper.py\n           |- config.yml\n                |- py_modules\n                       |- helper.py\n                       |- my_cust.py                \n                ", "items": {"minItems": 1, "type": "string", "uniqueItems": true}, "type": "array"}}, "required": [], "type": "object"}}, "description": "The YAML schema of Jina objects (Flow, Executor).", "oneOf": [{"$ref": "#/definitions/Jina::Flow"}], "type": "object"}