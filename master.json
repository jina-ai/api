{"authors": "dev-team@jina.ai", "description": "Cloud-native neural search framework for any kind of data", "docs": "https://docs.jina.ai", "license": "Apache 2.0", "methods": [{"help": "Start hello world demos.", "methods": [{"help": "Run a fashion search demo", "name": "fashion", "options": [{"choices": null, "default": "a7ebdf485f0e4d6da84d94c3f2fc1917", "default_random": false, "help": "The workdir for hello-world demoall data, indices, shards and outputs will be saved there", "name": "workdir", "option_strings": ["--workdir"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "The proxy when downloading sample data", "name": "download_proxy", "option_strings": ["--download-proxy"], "required": false, "type": "str"}, {"choices": null, "default": "http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz", "default_random": false, "help": "The url of index data (should be in idx3-ubyte.gz format)", "name": "index_data_url", "option_strings": ["--index-data-url"], "required": false, "type": "str"}, {"choices": null, "default": "http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz", "default_random": false, "help": "The url of index labels data (should be in idx3-ubyte.gz format)", "name": "index_labels_url", "option_strings": ["--index-labels-url"], "required": false, "type": "str"}, {"choices": null, "default": "http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz", "default_random": false, "help": "The url of query data (should be in idx3-ubyte.gz format)", "name": "query_data_url", "option_strings": ["--query-data-url"], "required": false, "type": "str"}, {"choices": null, "default": "http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz", "default_random": false, "help": "The url of query labels data (should be in idx3-ubyte.gz format)", "name": "query_labels_url", "option_strings": ["--query-labels-url"], "required": false, "type": "str"}, {"choices": null, "default": 128, "default_random": false, "help": "The number of queries to visualize", "name": "num_query", "option_strings": ["--num-query"], "required": false, "type": "int"}, {"choices": null, "default": 50, "default_random": false, "help": "Top-k results to retrieve and visualize", "name": "top_k", "option_strings": ["--top-k"], "required": false, "type": "int"}]}, {"help": "Run a chatbot QA demo", "name": "chatbot", "options": [{"choices": null, "default": "db87192840e4408c96b6a3bfa6ddc10b", "default_random": false, "help": "The workdir for hello-world demoall data, indices, shards and outputs will be saved there", "name": "workdir", "option_strings": ["--workdir"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "The proxy when downloading sample data", "name": "download_proxy", "option_strings": ["--download-proxy"], "required": false, "type": "str"}, {"choices": null, "default": "https://static.jina.ai/chatbot/dataset.csv", "default_random": false, "help": "The url of index csv data", "name": "index_data_url", "option_strings": ["--index-data-url"], "required": false, "type": "str"}, {"choices": null, "default": 8080, "default_random": false, "help": "The port of the host exposed to the public", "name": "port_expose", "option_strings": ["--port-expose"], "required": false, "type": "int"}, {"choices": null, "default": 2, "default_random": false, "help": "The number of replicas when index and query", "name": "replicas", "option_strings": ["--replicas"], "required": false, "type": "int"}]}, {"help": "Run a multimodal search demo", "name": "multimodal", "options": [{"choices": null, "default": "e46c0054a6174260a8c8e478252ad2ff", "default_random": false, "help": "The workdir for hello-world demoall data, indices, shards and outputs will be saved there", "name": "workdir", "option_strings": ["--workdir"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "The proxy when downloading sample data", "name": "download_proxy", "option_strings": ["--download-proxy"], "required": false, "type": "str"}, {"choices": null, "default": "https://static.jina.ai/multimodal/people-img.zip", "default_random": false, "help": "The url of index csv data", "name": "index_data_url", "option_strings": ["--index-data-url"], "required": false, "type": "str"}, {"choices": null, "default": 8080, "default_random": false, "help": "The port of the host exposed to the public", "name": "port_expose", "option_strings": ["--port-expose"], "required": false, "type": "int"}]}, {"help": "Fork a hello world project to a local directory.", "name": "fork", "options": [{"choices": ["fashion", "chatbot", "multimodal"], "default": null, "default_random": false, "help": "The hello world project to fork", "name": "project", "option_strings": [], "required": true, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "The dest directory of the forked project. Note, it can not be an existing path.", "name": "destination", "option_strings": [], "required": true, "type": "str"}]}], "name": "hello", "options": []}, {"help": "Start an Executor. Executor is how Jina processes Document.", "name": "executor", "options": [{"choices": null, "default": null, "default_random": false, "help": "\nThe name of this object.\n\nThis will be used in the following places:\n- how you refer to this object in Python/YAML/CLI\n- visualization\n- log message header\n- ...\n\nWhen not given, then the default naming strategy will apply.\n                    ", "name": "name", "option_strings": ["--name"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "The working directory for any IO operations in this object. If not set, then derive from its parent `workspace`.", "name": "workspace", "option_strings": ["--workspace"], "required": false, "type": "str"}, {"choices": null, "default": "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/jina/resources/logging.default.yml", "default_random": false, "help": "The YAML config of the logger used in this object.", "name": "log_config", "option_strings": ["--log-config"], "required": false, "type": "str"}, {"choices": null, "default": false, "default_random": false, "help": "If set, then no log will be emitted from this object.", "name": "quiet", "option_strings": ["--quiet"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "If set, then exception stack information will not be added to the log", "name": "quiet_error", "option_strings": ["--quiet-error"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "Defines if the routing table should be pre computed by the Flow. In this case it is statically defined for each Pod and not send on every data request. Can not be used in combination with external pods", "name": "static_routing_table", "option_strings": ["--static-routing-table"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "If set, DocumentArray matrix will be reduced into one DocumentArray before reaching this pod", "name": "reduce", "option_strings": ["--reduce"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "The identity of a ZMQRuntime. It is used for unique socket identification towards other ZMQRuntimes.", "name": "zmq_identity", "option_strings": ["--zmq-identity"], "required": false, "type": "str"}, {"choices": null, "default": 35711, "default_factory": "random_port", "default_random": true, "help": "The port for controlling the runtime, default a random port between [49152, 65535]", "name": "port_ctrl", "option_strings": ["--port-ctrl"], "required": false, "type": "int"}, {"choices": null, "default": false, "default_random": false, "help": "If set, use ipc protocol for control socket", "name": "ctrl_with_ipc", "option_strings": ["--ctrl-with-ipc"], "required": false, "type": "bool"}, {"choices": null, "default": 5000, "default_random": false, "help": "The timeout in milliseconds of the control request, -1 for waiting forever", "name": "timeout_ctrl", "option_strings": ["--timeout-ctrl"], "required": false, "type": "int"}, {"choices": null, "default": null, "default_random": false, "help": "The SSH server through which the tunnel will be created, can actually be a fully specified `user@server:port` ssh url.", "name": "ssh_server", "option_strings": ["--ssh-server"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "This specifies a key to be used in ssh login, default None. regular default ssh keys will be used without specifying this argument.", "name": "ssh_keyfile", "option_strings": ["--ssh-keyfile"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "The ssh password to the ssh server.", "name": "ssh_password", "option_strings": ["--ssh-password"], "required": false, "type": "str"}, {"choices": null, "default": "BaseExecutor", "default_random": false, "help": "\n        The config of the executor, it could be one of the followings:\n        * an Executor YAML file (.yml, .yaml, .jaml)\n        * a Jina Hub Executor (must start with `jinahub://` or `jinahub+docker://`)\n        * a docker image (must start with `docker://`)\n        * the string literal of a YAML config (must start with `!` or `jtype: `)\n        * the string literal of a JSON config\n\n        When use it under Python, one can use the following values additionally:\n        - a Python dict that represents the config\n        - a text file stream has `.read()` interface\n        ", "name": "uses", "option_strings": ["--uses"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "\n    Dictionary of keyword arguments that will override the `with` configuration in `uses`\n    ", "name": "uses_with", "option_strings": ["--uses-with"], "required": false, "type": "dict"}, {"choices": null, "default": null, "default_random": false, "help": "\n    Dictionary of keyword arguments that will override the `metas` configuration in `uses`\n    ", "name": "uses_metas", "option_strings": ["--uses-metas"], "required": false, "type": "dict"}, {"choices": null, "default": null, "default_random": false, "help": "\n        Dictionary of keyword arguments that will override the `requests` configuration in `uses`\n        ", "name": "uses_requests", "option_strings": ["--uses-requests"], "required": false, "type": "dict"}, {"choices": null, "default": null, "default_random": false, "help": "\nThe customized python modules need to be imported before loading the executor\n\nNote that the recommended way is to only import a single module - a simple python file, if your\nexecutor can be defined in a single file, or an ``__init__.py`` file if you have multiple files,\nwhich should be structured as a python package. For more details, please see the\n`Executor cookbook <https://docs.jina.ai/fundamentals/executor/repository-structure/>`__\n", "name": "py_modules", "option_strings": ["--py-modules"], "required": false, "type": "typing.List[str]"}, {"choices": null, "default": 43053, "default_factory": "random_port", "default_random": true, "help": "The port for input data, default a random port between [49152, 65535]", "name": "port_in", "option_strings": ["--port-in"], "required": false, "type": "int"}, {"choices": null, "default": 38891, "default_factory": "random_port", "default_random": true, "help": "The port for output data, default a random port between [49152, 65535]", "name": "port_out", "option_strings": ["--port-out"], "required": false, "type": "int"}, {"choices": null, "default": null, "default_random": false, "help": "The host address for input, by default it is 0.0.0.0", "name": "hosts_in_connect", "option_strings": ["--hosts-in-connect"], "required": false, "type": "typing.List[str]"}, {"choices": null, "default": "0.0.0.0", "default_random": false, "help": "The host address for input, by default it is 0.0.0.0", "name": "host_in", "option_strings": ["--host-in"], "required": false, "type": "str"}, {"choices": null, "default": "0.0.0.0", "default_random": false, "help": "The host address for output, by default it is 0.0.0.0", "name": "host_out", "option_strings": ["--host-out"], "required": false, "type": "str"}, {"choices": ["PULL_BIND", "PULL_CONNECT", "PUSH_BIND", "PUSH_CONNECT", "SUB_BIND", "SUB_CONNECT", "PUB_BIND", "PUB_CONNECT", "PAIR_BIND", "PAIR_CONNECT", "ROUTER_BIND", "DEALER_CONNECT", "ROUTER_CONNECT"], "default": "PULL_BIND", "default_random": false, "help": "The socket type for input port", "name": "socket_in", "option_strings": ["--socket-in"], "required": false, "type": "str"}, {"choices": ["PULL_BIND", "PULL_CONNECT", "PUSH_BIND", "PUSH_CONNECT", "SUB_BIND", "SUB_CONNECT", "PUB_BIND", "PUB_CONNECT", "PAIR_BIND", "PAIR_CONNECT", "ROUTER_BIND", "DEALER_CONNECT", "ROUTER_CONNECT"], "default": "PUSH_BIND", "default_random": false, "help": "The socket type for output port", "name": "socket_out", "option_strings": ["--socket-out"], "required": false, "type": "str"}, {"choices": null, "default": -1, "default_random": false, "help": "The memory high watermark of this pod in Gigabytes, pod will restart when this is reached. -1 means no restriction", "name": "memory_hwm", "option_strings": ["--memory-hwm"], "required": false, "type": "int"}, {"choices": ["IGNORE", "SKIP_HANDLE", "THROW_EARLY"], "default": "IGNORE", "default_random": false, "help": "\nThe skip strategy on exceptions.\n\n- IGNORE: Ignore it, keep running all Executors in the sequel flow\n- SKIP_HANDLE: Skip all Executors in the sequel, only `pre_hook` and `post_hook` are called\n- THROW_EARLY: Immediately throw the exception, the sequel flow will not be running at all\n\nNote, `IGNORE`, `SKIP_EXECUTOR` and `SKIP_HANDLE` do not guarantee the success execution in the sequel flow. If something\nis wrong in the upstream, it is hard to carry this exception and moving forward without any side-effect.\n", "name": "on_error_strategy", "option_strings": ["--on-error-strategy"], "required": false, "type": "str"}, {"choices": null, "default": false, "default_random": false, "help": "If set, only native Executors is allowed, and the Executor is always run inside ZEDRuntime.", "name": "native", "option_strings": ["--native"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "Informs a Pea that runs in a container. Important to properly set networking information", "name": "runs_in_docker", "option_strings": ["--runs-in-docker"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "The entrypoint command overrides the ENTRYPOINT in Docker image. when not set then the Docker image ENTRYPOINT takes effective.", "name": "entrypoint", "option_strings": ["--entrypoint"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "\nDictionary of kwargs arguments that will be passed to Docker SDK when starting the docker '\ncontainer. \n\nMore details can be found in the Docker SDK docs:  https://docker-py.readthedocs.io/en/stable/\n\n", "name": "docker_kwargs", "option_strings": ["--docker-kwargs"], "required": false, "type": "dict"}, {"choices": null, "default": false, "default_random": false, "help": "Pull the latest image before running", "name": "pull_latest", "option_strings": ["--pull-latest"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "\nThe path on the host to be mounted inside the container. \n\nNote, \n- If separated by `:`, then the first part will be considered as the local host path and the second part is the path in the container system. \n- If no split provided, then the basename of that directory will be mounted into container's root path, e.g. `--volumes=\"/user/test/my-workspace\"` will be mounted into `/my-workspace` inside the container. \n- All volumes are mounted with read-write mode.\n", "name": "volumes", "option_strings": ["--volumes"], "required": false, "type": "typing.List[str]"}, {"choices": null, "default": null, "default_random": false, "help": "\n    This argument allows dockerized Jina executor discover local gpu devices.\n\n    Note, \n    - To access all gpus, use `--gpus all`.\n    - To access multiple gpus, e.g. make use of 2 gpus, use `--gpus 2`.\n    - To access specified gpus based on device id, use `--gpus device=[YOUR-GPU-DEVICE-ID]`\n    - To access specified gpus based on multiple device id, use `--gpus device=[YOUR-GPU-DEVICE-ID1],device=[YOUR-GPU-DEVICE-ID2]`\n    - To specify more parameters, use `--gpus device=[YOUR-GPU-DEVICE-ID],runtime=nvidia,capabilities=display\n    ", "name": "gpus", "option_strings": ["--gpus"], "required": false, "type": "str"}, {"choices": null, "default": "0.0.0.0", "default_random": false, "help": "The host address of the runtime, by default it is 0.0.0.0.", "name": "host", "option_strings": ["--host"], "required": false, "type": "str"}, {"choices": null, "default": 8000, "default_random": false, "help": "The port of the remote machine for usage with JinaD.", "name": "port_jinad", "option_strings": ["--port-jinad"], "required": false, "type": "int"}, {"choices": null, "default": false, "default_random": false, "help": "Do not display the streaming of remote logs on local console", "name": "quiet_remote_logs", "option_strings": ["--quiet-remote-logs"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "\nThe files on the host to be uploaded to the remote\nworkspace. This can be useful when your Pod has more\nfile dependencies beyond a single YAML file, e.g.\nPython files, data files.\n\nNote,\n- currently only flatten structure is supported, which means if you upload `[./foo/a.py, ./foo/b.pp, ./bar/c.yml]`, then they will be put under the _same_ workspace on the remote, losing all hierarchies.\n- by default, `--uses` YAML file is always uploaded.\n- uploaded files are by default isolated across the runs. To ensure files are submitted to the same workspace across different runs, use `--workspace-id` to specify the workspace.\n", "name": "upload_files", "option_strings": ["--upload-files"], "required": false, "type": "typing.List[str]"}, {"choices": null, "default": false, "default_random": false, "help": "The Pea attempts to terminate all of its Runtime child processes/threads on existing. setting it to true basically tell the Pea do not wait on the Runtime when closing", "name": "daemon", "option_strings": ["--daemon"], "required": false, "type": "bool"}, {"choices": ["THREAD", "PROCESS"], "default": "PROCESS", "default_random": false, "help": "The parallel backend of the runtime inside the Pea", "name": "runtime_backend", "option_strings": ["--runtime-backend", "--runtime"], "required": false, "type": "str"}, {"choices": null, "default": "ZEDRuntime", "default_random": false, "help": "The runtime class to run inside the Pea", "name": "runtime_cls", "option_strings": ["--runtime-cls"], "required": false, "type": "str"}, {"choices": null, "default": 600000, "default_random": false, "help": "The timeout in milliseconds of a Pea waits for the runtime to be ready, -1 for waiting forever", "name": "timeout_ready", "option_strings": ["--timeout-ready"], "required": false, "type": "int"}, {"choices": null, "default": null, "default_random": false, "help": "The map of environment variables that are available inside runtime", "name": "env", "option_strings": ["--env"], "required": false, "type": "dict"}, {"choices": null, "default": false, "default_random": false, "help": "If set, expose the public IP address to remote when necessary, by default it exposesprivate IP address, which only allows accessing under the same network/subnet. Important to set this to true when the Pea will receive input connections from remote Peas", "name": "expose_public", "option_strings": ["--expose-public"], "required": false, "type": "bool"}, {"choices": null, "default": 1, "default_random": false, "help": "The number of shards in the pod running at the same time, `port_in` and `port_out` will be set to random, and routers will be added automatically when necessary. For more details check https://docs.jina.ai/fundamentals/flow/topology/", "name": "shards", "option_strings": ["--shards", "--parallel"], "required": false, "type": "int"}, {"choices": null, "default": 1, "default_random": false, "help": "The number of replicas in the pod, `port_in` and `port_out` will be set to random, and routers will be added automatically when necessary", "name": "replicas", "option_strings": ["--replicas"], "required": false, "type": "int"}, {"choices": null, "default": false, "default_random": false, "help": "If set, install `requirements.txt` in the Hub Executor bundle to local", "name": "install_requirements", "option_strings": ["--install-requirements"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "If set, always pull the latest Hub Executor bundle even it exists on local", "name": "force_update", "option_strings": ["--force-update", "--force"], "required": false, "type": "bool"}]}, {"help": "Start a Flow. Flow is how Jina streamlines and distributes Executors.", "name": "flow", "options": [{"choices": null, "default": null, "default_random": false, "help": "\nThe name of this object.\n\nThis will be used in the following places:\n- how you refer to this object in Python/YAML/CLI\n- visualization\n- log message header\n- ...\n\nWhen not given, then the default naming strategy will apply.\n                    ", "name": "name", "option_strings": ["--name"], "required": false, "type": "str"}, {"choices": null, "default": "./", "default_random": false, "help": "The working directory for any IO operations in this object. If not set, then derive from its parent `workspace`.", "name": "workspace", "option_strings": ["--workspace"], "required": false, "type": "str"}, {"choices": null, "default": "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/jina/resources/logging.default.yml", "default_random": false, "help": "The YAML config of the logger used in this object.", "name": "log_config", "option_strings": ["--log-config"], "required": false, "type": "str"}, {"choices": null, "default": false, "default_random": false, "help": "If set, then no log will be emitted from this object.", "name": "quiet", "option_strings": ["--quiet"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "If set, then exception stack information will not be added to the log", "name": "quiet_error", "option_strings": ["--quiet-error"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "Defines if the routing table should be pre computed by the Flow. In this case it is statically defined for each Pod and not send on every data request. Can not be used in combination with external pods", "name": "static_routing_table", "option_strings": ["--static-routing-table"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "If set, DocumentArray matrix will be reduced into one DocumentArray before reaching this pod", "name": "reduce", "option_strings": ["--reduce"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "The YAML file represents a flow", "name": "uses", "option_strings": ["--uses"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "The map of environment variables that are available inside runtime", "name": "env", "option_strings": ["--env"], "required": false, "type": "dict"}, {"choices": ["HANG", "REMOVE", "COLLECT"], "default": "COLLECT", "default_random": false, "help": "\n    The strategy on those inspect pods in the flow.\n\n    If `REMOVE` is given then all inspect pods are removed when building the flow.\n    ", "name": "inspect", "option_strings": ["--inspect"], "required": false, "type": "str"}]}, {"help": "Ping a Pod and check its network connectivity.", "name": "ping", "options": [{"choices": null, "default": null, "default_random": false, "help": "The host address of the target Pea, e.g. 0.0.0.0", "name": "host", "option_strings": [], "required": true, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "The control port of the target pod/pea", "name": "port", "option_strings": [], "required": true, "type": "int"}, {"choices": null, "default": 3000, "default_random": false, "help": "\nTimeout in millisecond of one check\n-1 for waiting forever\n", "name": "timeout", "option_strings": ["--timeout"], "required": false, "type": "int"}, {"choices": null, "default": 3, "default_random": false, "help": "The max number of tried health checks before exit with exit code 1", "name": "retries", "option_strings": ["--retries"], "required": false, "type": "int"}, {"choices": null, "default": false, "default_random": false, "help": "If set, print the response when received", "name": "print_response", "option_strings": ["--print-response"], "required": false, "type": "bool"}]}, {"help": "Start a Gateway that receives client Requests via gRPC/REST interface", "name": "gateway", "options": [{"choices": null, "default": "gateway", "default_random": false, "help": "\nThe name of this object.\n\nThis will be used in the following places:\n- how you refer to this object in Python/YAML/CLI\n- visualization\n- log message header\n- ...\n\nWhen not given, then the default naming strategy will apply.\n                    ", "name": "name", "option_strings": ["--name"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "The working directory for any IO operations in this object. If not set, then derive from its parent `workspace`.", "name": "workspace", "option_strings": ["--workspace"], "required": false, "type": "str"}, {"choices": null, "default": "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/jina/resources/logging.default.yml", "default_random": false, "help": "The YAML config of the logger used in this object.", "name": "log_config", "option_strings": ["--log-config"], "required": false, "type": "str"}, {"choices": null, "default": false, "default_random": false, "help": "If set, then no log will be emitted from this object.", "name": "quiet", "option_strings": ["--quiet"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "If set, then exception stack information will not be added to the log", "name": "quiet_error", "option_strings": ["--quiet-error"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "Defines if the routing table should be pre computed by the Flow. In this case it is statically defined for each Pod and not send on every data request. Can not be used in combination with external pods", "name": "static_routing_table", "option_strings": ["--static-routing-table"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "If set, DocumentArray matrix will be reduced into one DocumentArray before reaching this pod", "name": "reduce", "option_strings": ["--reduce"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "The identity of a ZMQRuntime. It is used for unique socket identification towards other ZMQRuntimes.", "name": "zmq_identity", "option_strings": ["--zmq-identity"], "required": false, "type": "str"}, {"choices": null, "default": 50681, "default_factory": "random_port", "default_random": true, "help": "The port for controlling the runtime, default a random port between [49152, 65535]", "name": "port_ctrl", "option_strings": ["--port-ctrl"], "required": false, "type": "int"}, {"choices": null, "default": true, "default_random": false, "help": "If set, use ipc protocol for control socket", "name": "ctrl_with_ipc", "option_strings": ["--ctrl-with-ipc"], "required": false, "type": "bool"}, {"choices": null, "default": 5000, "default_random": false, "help": "The timeout in milliseconds of the control request, -1 for waiting forever", "name": "timeout_ctrl", "option_strings": ["--timeout-ctrl"], "required": false, "type": "int"}, {"choices": null, "default": null, "default_random": false, "help": "The SSH server through which the tunnel will be created, can actually be a fully specified `user@server:port` ssh url.", "name": "ssh_server", "option_strings": ["--ssh-server"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "This specifies a key to be used in ssh login, default None. regular default ssh keys will be used without specifying this argument.", "name": "ssh_keyfile", "option_strings": ["--ssh-keyfile"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "The ssh password to the ssh server.", "name": "ssh_password", "option_strings": ["--ssh-password"], "required": false, "type": "str"}, {"choices": null, "default": "BaseExecutor", "default_random": false, "help": "\n        The config of the executor, it could be one of the followings:\n        * an Executor YAML file (.yml, .yaml, .jaml)\n        * a Jina Hub Executor (must start with `jinahub://` or `jinahub+docker://`)\n        * a docker image (must start with `docker://`)\n        * the string literal of a YAML config (must start with `!` or `jtype: `)\n        * the string literal of a JSON config\n\n        When use it under Python, one can use the following values additionally:\n        - a Python dict that represents the config\n        - a text file stream has `.read()` interface\n        ", "name": "uses", "option_strings": ["--uses"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "\n    Dictionary of keyword arguments that will override the `with` configuration in `uses`\n    ", "name": "uses_with", "option_strings": ["--uses-with"], "required": false, "type": "dict"}, {"choices": null, "default": null, "default_random": false, "help": "\n    Dictionary of keyword arguments that will override the `metas` configuration in `uses`\n    ", "name": "uses_metas", "option_strings": ["--uses-metas"], "required": false, "type": "dict"}, {"choices": null, "default": null, "default_random": false, "help": "\n        Dictionary of keyword arguments that will override the `requests` configuration in `uses`\n        ", "name": "uses_requests", "option_strings": ["--uses-requests"], "required": false, "type": "dict"}, {"choices": null, "default": null, "default_random": false, "help": "\nThe customized python modules need to be imported before loading the executor\n\nNote that the recommended way is to only import a single module - a simple python file, if your\nexecutor can be defined in a single file, or an ``__init__.py`` file if you have multiple files,\nwhich should be structured as a python package. For more details, please see the\n`Executor cookbook <https://docs.jina.ai/fundamentals/executor/repository-structure/>`__\n", "name": "py_modules", "option_strings": ["--py-modules"], "required": false, "type": "typing.List[str]"}, {"choices": null, "default": 54021, "default_factory": "random_port", "default_random": true, "help": "The port for input data, default a random port between [49152, 65535]", "name": "port_in", "option_strings": ["--port-in"], "required": false, "type": "int"}, {"choices": null, "default": 59647, "default_factory": "random_port", "default_random": true, "help": "The port for output data, default a random port between [49152, 65535]", "name": "port_out", "option_strings": ["--port-out"], "required": false, "type": "int"}, {"choices": null, "default": null, "default_random": false, "help": "The host address for input, by default it is 0.0.0.0", "name": "hosts_in_connect", "option_strings": ["--hosts-in-connect"], "required": false, "type": "typing.List[str]"}, {"choices": null, "default": "0.0.0.0", "default_random": false, "help": "The host address for input, by default it is 0.0.0.0", "name": "host_in", "option_strings": ["--host-in"], "required": false, "type": "str"}, {"choices": null, "default": "0.0.0.0", "default_random": false, "help": "The host address for output, by default it is 0.0.0.0", "name": "host_out", "option_strings": ["--host-out"], "required": false, "type": "str"}, {"choices": ["PULL_BIND", "PULL_CONNECT", "PUSH_BIND", "PUSH_CONNECT", "SUB_BIND", "SUB_CONNECT", "PUB_BIND", "PUB_CONNECT", "PAIR_BIND", "PAIR_CONNECT", "ROUTER_BIND", "DEALER_CONNECT", "ROUTER_CONNECT"], "default": "PULL_CONNECT", "default_random": false, "help": "The socket type for input port", "name": "socket_in", "option_strings": ["--socket-in"], "required": false, "type": "str"}, {"choices": ["PULL_BIND", "PULL_CONNECT", "PUSH_BIND", "PUSH_CONNECT", "SUB_BIND", "SUB_CONNECT", "PUB_BIND", "PUB_CONNECT", "PAIR_BIND", "PAIR_CONNECT", "ROUTER_BIND", "DEALER_CONNECT", "ROUTER_CONNECT"], "default": "PUSH_CONNECT", "default_random": false, "help": "The socket type for output port", "name": "socket_out", "option_strings": ["--socket-out"], "required": false, "type": "str"}, {"choices": null, "default": -1, "default_random": false, "help": "The memory high watermark of this pod in Gigabytes, pod will restart when this is reached. -1 means no restriction", "name": "memory_hwm", "option_strings": ["--memory-hwm"], "required": false, "type": "int"}, {"choices": ["IGNORE", "SKIP_HANDLE", "THROW_EARLY"], "default": "IGNORE", "default_random": false, "help": "\nThe skip strategy on exceptions.\n\n- IGNORE: Ignore it, keep running all Executors in the sequel flow\n- SKIP_HANDLE: Skip all Executors in the sequel, only `pre_hook` and `post_hook` are called\n- THROW_EARLY: Immediately throw the exception, the sequel flow will not be running at all\n\nNote, `IGNORE`, `SKIP_EXECUTOR` and `SKIP_HANDLE` do not guarantee the success execution in the sequel flow. If something\nis wrong in the upstream, it is hard to carry this exception and moving forward without any side-effect.\n", "name": "on_error_strategy", "option_strings": ["--on-error-strategy"], "required": false, "type": "str"}, {"choices": null, "default": false, "default_random": false, "help": "If set, only native Executors is allowed, and the Executor is always run inside ZEDRuntime.", "name": "native", "option_strings": ["--native"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "Informs a Pea that runs in a container. Important to properly set networking information", "name": "runs_in_docker", "option_strings": ["--runs-in-docker"], "required": false, "type": "bool"}, {"choices": null, "default": 0, "default_random": false, "help": "\n    Number of requests fetched from the client before feeding into the first Executor. \n    \n    Used to control the speed of data input into a Flow. 0 disables prefetch (disabled by default)", "name": "prefetch", "option_strings": ["--prefetch"], "required": false, "type": "int"}, {"choices": null, "default": null, "default_random": false, "help": "The title of this HTTP server. It will be used in automatics docs such as Swagger UI.", "name": "title", "option_strings": ["--title"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "The description of this HTTP server. It will be used in automatics docs such as Swagger UI.", "name": "description", "option_strings": ["--description"], "required": false, "type": "str"}, {"choices": null, "default": false, "default_random": false, "help": "\n        If set, a CORS middleware is added to FastAPI frontend to allow cross-origin access.\n        ", "name": "cors", "option_strings": ["--cors"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "If set, the default swagger ui is used for `/docs` endpoint. ", "name": "default_swagger_ui", "option_strings": ["--default-swagger-ui"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "If set, /status /post endpoints are removed from HTTP interface. ", "name": "no_debug_endpoints", "option_strings": ["--no-debug-endpoints"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "\n        If set, /index, /search, /update, /delete endpoints are removed from HTTP interface.\n\n        Any executor that has `@requests(on=...)` bind with those values will receive data requests.\n        ", "name": "no_crud_endpoints", "option_strings": ["--no-crud-endpoints"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "\n        A JSON string that represents a map from executor endpoints (`@requests(on=...)`) to HTTP endpoints.\n        ", "name": "expose_endpoints", "option_strings": ["--expose-endpoints"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "\nDictionary of kwargs arguments that will be passed to Uvicorn server when starting the server\n\nMore details can be found in Uvicorn docs: https://www.uvicorn.org/settings/\n\n", "name": "uvicorn_kwargs", "option_strings": ["--uvicorn-kwargs"], "required": false, "type": "dict"}, {"choices": ["NONE", "LZ4", "ZLIB", "GZIP", "BZ2", "LZMA"], "default": "NONE", "default_random": false, "help": "\n    The compress algorithm used over the entire Flow.\n\n    Note that this is not necessarily effective,\n    it depends on the settings of `--compress-min-bytes` and `compress-min-ratio`", "name": "compress", "option_strings": ["--compress"], "required": false, "type": "str"}, {"choices": null, "default": 1024, "default_random": false, "help": "The original message size must be larger than this number to trigger the compress algorithm, -1 means disable compression.", "name": "compress_min_bytes", "option_strings": ["--compress-min-bytes"], "required": false, "type": "int"}, {"choices": null, "default": 1.1, "default_random": false, "help": "The compression ratio (uncompressed_size/compressed_size) must be higher than this number to trigger the compress algorithm.", "name": "compress_min_ratio", "option_strings": ["--compress-min-ratio"], "required": false, "type": "float"}, {"choices": ["GRPC", "HTTP", "WEBSOCKET"], "default": "GRPC", "default_random": false, "help": "Communication protocol between server and client.", "name": "protocol", "option_strings": ["--protocol"], "required": false, "type": "str"}, {"choices": null, "default": "0.0.0.0", "default_random": false, "help": "The host address of the runtime, by default it is 0.0.0.0.", "name": "host", "option_strings": ["--host"], "required": false, "type": "str"}, {"choices": null, "default": false, "default_random": false, "help": "If set, respect the http_proxy and https_proxy environment variables. otherwise, it will unset these proxy variables before start. gRPC seems to prefer no proxy", "name": "proxy", "option_strings": ["--proxy"], "required": false, "type": "bool"}, {"choices": null, "default": 36177, "default_factory": "random_port", "default_random": true, "help": "The port that the gateway exposes for clients for GRPC connections.", "name": "port_expose", "option_strings": ["--port-expose"], "required": false, "type": "int"}, {"choices": null, "default": false, "default_random": false, "help": "The Pea attempts to terminate all of its Runtime child processes/threads on existing. setting it to true basically tell the Pea do not wait on the Runtime when closing", "name": "daemon", "option_strings": ["--daemon"], "required": false, "type": "bool"}, {"choices": ["THREAD", "PROCESS"], "default": "PROCESS", "default_random": false, "help": "The parallel backend of the runtime inside the Pea", "name": "runtime_backend", "option_strings": ["--runtime-backend", "--runtime"], "required": false, "type": "str"}, {"choices": null, "default": "GRPCRuntime", "default_random": false, "help": "The runtime class to run inside the Pea", "name": "runtime_cls", "option_strings": ["--runtime-cls"], "required": false, "type": "str"}, {"choices": null, "default": 600000, "default_random": false, "help": "The timeout in milliseconds of a Pea waits for the runtime to be ready, -1 for waiting forever", "name": "timeout_ready", "option_strings": ["--timeout-ready"], "required": false, "type": "int"}, {"choices": null, "default": null, "default_random": false, "help": "The map of environment variables that are available inside runtime", "name": "env", "option_strings": ["--env"], "required": false, "type": "dict"}, {"choices": null, "default": false, "default_random": false, "help": "If set, expose the public IP address to remote when necessary, by default it exposesprivate IP address, which only allows accessing under the same network/subnet. Important to set this to true when the Pea will receive input connections from remote Peas", "name": "expose_public", "option_strings": ["--expose-public"], "required": false, "type": "bool"}, {"choices": null, "default": 1, "default_random": false, "help": "The number of shards in the pod running at the same time, `port_in` and `port_out` will be set to random, and routers will be added automatically when necessary. For more details check https://docs.jina.ai/fundamentals/flow/topology/", "name": "shards", "option_strings": ["--shards", "--parallel"], "required": false, "type": "int"}, {"choices": null, "default": 1, "default_random": false, "help": "The number of replicas in the pod, `port_in` and `port_out` will be set to random, and routers will be added automatically when necessary", "name": "replicas", "option_strings": ["--replicas"], "required": false, "type": "int"}]}, {"help": "Push/Pull an Executor to/from Jina Hub", "methods": [{"help": "Create a new executor using the template", "name": "new", "options": [{"choices": null, "default": null, "default_random": false, "help": "the name of the Executor", "name": "name", "option_strings": ["--name"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "the path to store the Executor", "name": "path", "option_strings": ["--path"], "required": false, "type": "str"}, {"choices": null, "default": false, "default_random": false, "help": "If set, always set up advance configuration like description, keywords and url", "name": "advance_configuration", "option_strings": ["--advance-configuration"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "the short description of the Executor", "name": "description", "option_strings": ["--description"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "some keywords to help people search your Executor (separated by comma)", "name": "keywords", "option_strings": ["--keywords"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "the URL of your GitHub repo", "name": "url", "option_strings": ["--url"], "required": false, "type": "str"}, {"choices": null, "default": false, "default_random": false, "help": "If set, add a Dockerfile to the created Executor bundle", "name": "add_dockerfile", "option_strings": ["--add-dockerfile"], "required": false, "type": "bool"}]}, {"help": "Push an executor package to Jina hub", "name": "push", "options": [{"choices": null, "default": false, "default_random": false, "help": "If set, Hub executor usage will not be printed.", "name": "no_usage", "option_strings": ["--no-usage"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "The Executor folder to be pushed to Jina Hub", "name": "path", "option_strings": [], "required": true, "type": "dir_path"}, {"choices": null, "default": null, "default_random": false, "help": "The file path to the Dockerfile (default is `${cwd}/Dockerfile`)", "name": "dockerfile", "option_strings": ["-f", "--dockerfile"], "required": false, "type": "None"}, {"choices": null, "default": null, "default_random": false, "help": "If set, push will overwrite the Executor on the Hub that shares the same NAME or UUID8 identifier", "name": "force_update", "option_strings": ["--force-update", "--force"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "The secret for overwrite a Hub executor", "name": "secret", "option_strings": ["--secret"], "required": false, "type": "str"}, {"choices": null, "default": "==SUPPRESS==", "default_random": false, "help": "If set, the pushed executor is visible to public", "name": "public", "option_strings": ["--public"], "required": false, "type": "bool"}, {"choices": null, "default": "==SUPPRESS==", "default_random": false, "help": "If set, the pushed executor is invisible to public", "name": "private", "option_strings": ["--private"], "required": false, "type": "bool"}]}, {"help": "Download an executor image/package from Jina hub", "name": "pull", "options": [{"choices": null, "default": false, "default_random": false, "help": "If set, Hub executor usage will not be printed.", "name": "no_usage", "option_strings": ["--no-usage"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "The URI of the executor to pull (e.g., jinahub[+docker]://NAME)", "name": "uri", "option_strings": [], "required": true, "type": "hub_uri"}, {"choices": null, "default": false, "default_random": false, "help": "If set, install `requirements.txt` in the Hub Executor bundle to local", "name": "install_requirements", "option_strings": ["--install-requirements"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "If set, always pull the latest Hub Executor bundle even it exists on local", "name": "force_update", "option_strings": ["--force-update", "--force"], "required": false, "type": "bool"}]}], "name": "hub", "options": []}, {"help": "Show help text of a CLI argument", "name": "help", "options": [{"choices": null, "default": null, "default_random": false, "help": "Lookup the usage & mention of the argument name in Jina API. The name can be fuzzy", "name": "query", "option_strings": [], "required": true, "type": "str"}]}, {"help": "Start a Pea. You should rarely use this directly unless you are doing low-level orchestration", "name": "pea", "options": [{"choices": null, "default": null, "default_random": false, "help": "\nThe name of this object.\n\nThis will be used in the following places:\n- how you refer to this object in Python/YAML/CLI\n- visualization\n- log message header\n- ...\n\nWhen not given, then the default naming strategy will apply.\n                    ", "name": "name", "option_strings": ["--name"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "The working directory for any IO operations in this object. If not set, then derive from its parent `workspace`.", "name": "workspace", "option_strings": ["--workspace"], "required": false, "type": "str"}, {"choices": null, "default": "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/jina/resources/logging.default.yml", "default_random": false, "help": "The YAML config of the logger used in this object.", "name": "log_config", "option_strings": ["--log-config"], "required": false, "type": "str"}, {"choices": null, "default": false, "default_random": false, "help": "If set, then no log will be emitted from this object.", "name": "quiet", "option_strings": ["--quiet"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "If set, then exception stack information will not be added to the log", "name": "quiet_error", "option_strings": ["--quiet-error"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "Defines if the routing table should be pre computed by the Flow. In this case it is statically defined for each Pod and not send on every data request. Can not be used in combination with external pods", "name": "static_routing_table", "option_strings": ["--static-routing-table"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "If set, DocumentArray matrix will be reduced into one DocumentArray before reaching this pod", "name": "reduce", "option_strings": ["--reduce"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "The identity of a ZMQRuntime. It is used for unique socket identification towards other ZMQRuntimes.", "name": "zmq_identity", "option_strings": ["--zmq-identity"], "required": false, "type": "str"}, {"choices": null, "default": 54047, "default_factory": "random_port", "default_random": true, "help": "The port for controlling the runtime, default a random port between [49152, 65535]", "name": "port_ctrl", "option_strings": ["--port-ctrl"], "required": false, "type": "int"}, {"choices": null, "default": false, "default_random": false, "help": "If set, use ipc protocol for control socket", "name": "ctrl_with_ipc", "option_strings": ["--ctrl-with-ipc"], "required": false, "type": "bool"}, {"choices": null, "default": 5000, "default_random": false, "help": "The timeout in milliseconds of the control request, -1 for waiting forever", "name": "timeout_ctrl", "option_strings": ["--timeout-ctrl"], "required": false, "type": "int"}, {"choices": null, "default": null, "default_random": false, "help": "The SSH server through which the tunnel will be created, can actually be a fully specified `user@server:port` ssh url.", "name": "ssh_server", "option_strings": ["--ssh-server"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "This specifies a key to be used in ssh login, default None. regular default ssh keys will be used without specifying this argument.", "name": "ssh_keyfile", "option_strings": ["--ssh-keyfile"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "The ssh password to the ssh server.", "name": "ssh_password", "option_strings": ["--ssh-password"], "required": false, "type": "str"}, {"choices": null, "default": "BaseExecutor", "default_random": false, "help": "\n        The config of the executor, it could be one of the followings:\n        * an Executor YAML file (.yml, .yaml, .jaml)\n        * a Jina Hub Executor (must start with `jinahub://` or `jinahub+docker://`)\n        * a docker image (must start with `docker://`)\n        * the string literal of a YAML config (must start with `!` or `jtype: `)\n        * the string literal of a JSON config\n\n        When use it under Python, one can use the following values additionally:\n        - a Python dict that represents the config\n        - a text file stream has `.read()` interface\n        ", "name": "uses", "option_strings": ["--uses"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "\n    Dictionary of keyword arguments that will override the `with` configuration in `uses`\n    ", "name": "uses_with", "option_strings": ["--uses-with"], "required": false, "type": "dict"}, {"choices": null, "default": null, "default_random": false, "help": "\n    Dictionary of keyword arguments that will override the `metas` configuration in `uses`\n    ", "name": "uses_metas", "option_strings": ["--uses-metas"], "required": false, "type": "dict"}, {"choices": null, "default": null, "default_random": false, "help": "\n        Dictionary of keyword arguments that will override the `requests` configuration in `uses`\n        ", "name": "uses_requests", "option_strings": ["--uses-requests"], "required": false, "type": "dict"}, {"choices": null, "default": null, "default_random": false, "help": "\nThe customized python modules need to be imported before loading the executor\n\nNote that the recommended way is to only import a single module - a simple python file, if your\nexecutor can be defined in a single file, or an ``__init__.py`` file if you have multiple files,\nwhich should be structured as a python package. For more details, please see the\n`Executor cookbook <https://docs.jina.ai/fundamentals/executor/repository-structure/>`__\n", "name": "py_modules", "option_strings": ["--py-modules"], "required": false, "type": "typing.List[str]"}, {"choices": null, "default": 42295, "default_factory": "random_port", "default_random": true, "help": "The port for input data, default a random port between [49152, 65535]", "name": "port_in", "option_strings": ["--port-in"], "required": false, "type": "int"}, {"choices": null, "default": 57665, "default_factory": "random_port", "default_random": true, "help": "The port for output data, default a random port between [49152, 65535]", "name": "port_out", "option_strings": ["--port-out"], "required": false, "type": "int"}, {"choices": null, "default": null, "default_random": false, "help": "The host address for input, by default it is 0.0.0.0", "name": "hosts_in_connect", "option_strings": ["--hosts-in-connect"], "required": false, "type": "typing.List[str]"}, {"choices": null, "default": "0.0.0.0", "default_random": false, "help": "The host address for input, by default it is 0.0.0.0", "name": "host_in", "option_strings": ["--host-in"], "required": false, "type": "str"}, {"choices": null, "default": "0.0.0.0", "default_random": false, "help": "The host address for output, by default it is 0.0.0.0", "name": "host_out", "option_strings": ["--host-out"], "required": false, "type": "str"}, {"choices": ["PULL_BIND", "PULL_CONNECT", "PUSH_BIND", "PUSH_CONNECT", "SUB_BIND", "SUB_CONNECT", "PUB_BIND", "PUB_CONNECT", "PAIR_BIND", "PAIR_CONNECT", "ROUTER_BIND", "DEALER_CONNECT", "ROUTER_CONNECT"], "default": "PULL_BIND", "default_random": false, "help": "The socket type for input port", "name": "socket_in", "option_strings": ["--socket-in"], "required": false, "type": "str"}, {"choices": ["PULL_BIND", "PULL_CONNECT", "PUSH_BIND", "PUSH_CONNECT", "SUB_BIND", "SUB_CONNECT", "PUB_BIND", "PUB_CONNECT", "PAIR_BIND", "PAIR_CONNECT", "ROUTER_BIND", "DEALER_CONNECT", "ROUTER_CONNECT"], "default": "PUSH_BIND", "default_random": false, "help": "The socket type for output port", "name": "socket_out", "option_strings": ["--socket-out"], "required": false, "type": "str"}, {"choices": null, "default": -1, "default_random": false, "help": "The memory high watermark of this pod in Gigabytes, pod will restart when this is reached. -1 means no restriction", "name": "memory_hwm", "option_strings": ["--memory-hwm"], "required": false, "type": "int"}, {"choices": ["IGNORE", "SKIP_HANDLE", "THROW_EARLY"], "default": "IGNORE", "default_random": false, "help": "\nThe skip strategy on exceptions.\n\n- IGNORE: Ignore it, keep running all Executors in the sequel flow\n- SKIP_HANDLE: Skip all Executors in the sequel, only `pre_hook` and `post_hook` are called\n- THROW_EARLY: Immediately throw the exception, the sequel flow will not be running at all\n\nNote, `IGNORE`, `SKIP_EXECUTOR` and `SKIP_HANDLE` do not guarantee the success execution in the sequel flow. If something\nis wrong in the upstream, it is hard to carry this exception and moving forward without any side-effect.\n", "name": "on_error_strategy", "option_strings": ["--on-error-strategy"], "required": false, "type": "str"}, {"choices": null, "default": false, "default_random": false, "help": "If set, only native Executors is allowed, and the Executor is always run inside ZEDRuntime.", "name": "native", "option_strings": ["--native"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "Informs a Pea that runs in a container. Important to properly set networking information", "name": "runs_in_docker", "option_strings": ["--runs-in-docker"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "The entrypoint command overrides the ENTRYPOINT in Docker image. when not set then the Docker image ENTRYPOINT takes effective.", "name": "entrypoint", "option_strings": ["--entrypoint"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "\nDictionary of kwargs arguments that will be passed to Docker SDK when starting the docker '\ncontainer. \n\nMore details can be found in the Docker SDK docs:  https://docker-py.readthedocs.io/en/stable/\n\n", "name": "docker_kwargs", "option_strings": ["--docker-kwargs"], "required": false, "type": "dict"}, {"choices": null, "default": false, "default_random": false, "help": "Pull the latest image before running", "name": "pull_latest", "option_strings": ["--pull-latest"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "\nThe path on the host to be mounted inside the container. \n\nNote, \n- If separated by `:`, then the first part will be considered as the local host path and the second part is the path in the container system. \n- If no split provided, then the basename of that directory will be mounted into container's root path, e.g. `--volumes=\"/user/test/my-workspace\"` will be mounted into `/my-workspace` inside the container. \n- All volumes are mounted with read-write mode.\n", "name": "volumes", "option_strings": ["--volumes"], "required": false, "type": "typing.List[str]"}, {"choices": null, "default": null, "default_random": false, "help": "\n    This argument allows dockerized Jina executor discover local gpu devices.\n\n    Note, \n    - To access all gpus, use `--gpus all`.\n    - To access multiple gpus, e.g. make use of 2 gpus, use `--gpus 2`.\n    - To access specified gpus based on device id, use `--gpus device=[YOUR-GPU-DEVICE-ID]`\n    - To access specified gpus based on multiple device id, use `--gpus device=[YOUR-GPU-DEVICE-ID1],device=[YOUR-GPU-DEVICE-ID2]`\n    - To specify more parameters, use `--gpus device=[YOUR-GPU-DEVICE-ID],runtime=nvidia,capabilities=display\n    ", "name": "gpus", "option_strings": ["--gpus"], "required": false, "type": "str"}, {"choices": null, "default": "0.0.0.0", "default_random": false, "help": "The host address of the runtime, by default it is 0.0.0.0.", "name": "host", "option_strings": ["--host"], "required": false, "type": "str"}, {"choices": null, "default": 8000, "default_random": false, "help": "The port of the remote machine for usage with JinaD.", "name": "port_jinad", "option_strings": ["--port-jinad"], "required": false, "type": "int"}, {"choices": null, "default": false, "default_random": false, "help": "Do not display the streaming of remote logs on local console", "name": "quiet_remote_logs", "option_strings": ["--quiet-remote-logs"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "\nThe files on the host to be uploaded to the remote\nworkspace. This can be useful when your Pod has more\nfile dependencies beyond a single YAML file, e.g.\nPython files, data files.\n\nNote,\n- currently only flatten structure is supported, which means if you upload `[./foo/a.py, ./foo/b.pp, ./bar/c.yml]`, then they will be put under the _same_ workspace on the remote, losing all hierarchies.\n- by default, `--uses` YAML file is always uploaded.\n- uploaded files are by default isolated across the runs. To ensure files are submitted to the same workspace across different runs, use `--workspace-id` to specify the workspace.\n", "name": "upload_files", "option_strings": ["--upload-files"], "required": false, "type": "typing.List[str]"}, {"choices": null, "default": false, "default_random": false, "help": "The Pea attempts to terminate all of its Runtime child processes/threads on existing. setting it to true basically tell the Pea do not wait on the Runtime when closing", "name": "daemon", "option_strings": ["--daemon"], "required": false, "type": "bool"}, {"choices": ["THREAD", "PROCESS"], "default": "PROCESS", "default_random": false, "help": "The parallel backend of the runtime inside the Pea", "name": "runtime_backend", "option_strings": ["--runtime-backend", "--runtime"], "required": false, "type": "str"}, {"choices": null, "default": "ZEDRuntime", "default_random": false, "help": "The runtime class to run inside the Pea", "name": "runtime_cls", "option_strings": ["--runtime-cls"], "required": false, "type": "str"}, {"choices": null, "default": 600000, "default_random": false, "help": "The timeout in milliseconds of a Pea waits for the runtime to be ready, -1 for waiting forever", "name": "timeout_ready", "option_strings": ["--timeout-ready"], "required": false, "type": "int"}, {"choices": null, "default": null, "default_random": false, "help": "The map of environment variables that are available inside runtime", "name": "env", "option_strings": ["--env"], "required": false, "type": "dict"}, {"choices": null, "default": false, "default_random": false, "help": "If set, expose the public IP address to remote when necessary, by default it exposesprivate IP address, which only allows accessing under the same network/subnet. Important to set this to true when the Pea will receive input connections from remote Peas", "name": "expose_public", "option_strings": ["--expose-public"], "required": false, "type": "bool"}, {"choices": null, "default": 1, "default_random": false, "help": "The number of shards in the pod running at the same time, `port_in` and `port_out` will be set to random, and routers will be added automatically when necessary. For more details check https://docs.jina.ai/fundamentals/flow/topology/", "name": "shards", "option_strings": ["--shards", "--parallel"], "required": false, "type": "int"}, {"choices": null, "default": 1, "default_random": false, "help": "The number of replicas in the pod, `port_in` and `port_out` will be set to random, and routers will be added automatically when necessary", "name": "replicas", "option_strings": ["--replicas"], "required": false, "type": "int"}, {"choices": null, "default": false, "default_random": false, "help": "If set, install `requirements.txt` in the Hub Executor bundle to local", "name": "install_requirements", "option_strings": ["--install-requirements"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "If set, always pull the latest Hub Executor bundle even it exists on local", "name": "force_update", "option_strings": ["--force-update", "--force"], "required": false, "type": "bool"}]}, {"help": "Start a Pod. You should rarely use this directly unless you are doing low-level orchestration", "name": "pod", "options": [{"choices": null, "default": null, "default_random": false, "help": "\nThe name of this object.\n\nThis will be used in the following places:\n- how you refer to this object in Python/YAML/CLI\n- visualization\n- log message header\n- ...\n\nWhen not given, then the default naming strategy will apply.\n                    ", "name": "name", "option_strings": ["--name"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "The working directory for any IO operations in this object. If not set, then derive from its parent `workspace`.", "name": "workspace", "option_strings": ["--workspace"], "required": false, "type": "str"}, {"choices": null, "default": "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/jina/resources/logging.default.yml", "default_random": false, "help": "The YAML config of the logger used in this object.", "name": "log_config", "option_strings": ["--log-config"], "required": false, "type": "str"}, {"choices": null, "default": false, "default_random": false, "help": "If set, then no log will be emitted from this object.", "name": "quiet", "option_strings": ["--quiet"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "If set, then exception stack information will not be added to the log", "name": "quiet_error", "option_strings": ["--quiet-error"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "Defines if the routing table should be pre computed by the Flow. In this case it is statically defined for each Pod and not send on every data request. Can not be used in combination with external pods", "name": "static_routing_table", "option_strings": ["--static-routing-table"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "If set, DocumentArray matrix will be reduced into one DocumentArray before reaching this pod", "name": "reduce", "option_strings": ["--reduce"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "The identity of a ZMQRuntime. It is used for unique socket identification towards other ZMQRuntimes.", "name": "zmq_identity", "option_strings": ["--zmq-identity"], "required": false, "type": "str"}, {"choices": null, "default": 59925, "default_factory": "random_port", "default_random": true, "help": "The port for controlling the runtime, default a random port between [49152, 65535]", "name": "port_ctrl", "option_strings": ["--port-ctrl"], "required": false, "type": "int"}, {"choices": null, "default": false, "default_random": false, "help": "If set, use ipc protocol for control socket", "name": "ctrl_with_ipc", "option_strings": ["--ctrl-with-ipc"], "required": false, "type": "bool"}, {"choices": null, "default": 5000, "default_random": false, "help": "The timeout in milliseconds of the control request, -1 for waiting forever", "name": "timeout_ctrl", "option_strings": ["--timeout-ctrl"], "required": false, "type": "int"}, {"choices": null, "default": null, "default_random": false, "help": "The SSH server through which the tunnel will be created, can actually be a fully specified `user@server:port` ssh url.", "name": "ssh_server", "option_strings": ["--ssh-server"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "This specifies a key to be used in ssh login, default None. regular default ssh keys will be used without specifying this argument.", "name": "ssh_keyfile", "option_strings": ["--ssh-keyfile"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "The ssh password to the ssh server.", "name": "ssh_password", "option_strings": ["--ssh-password"], "required": false, "type": "str"}, {"choices": null, "default": "BaseExecutor", "default_random": false, "help": "\n        The config of the executor, it could be one of the followings:\n        * an Executor YAML file (.yml, .yaml, .jaml)\n        * a Jina Hub Executor (must start with `jinahub://` or `jinahub+docker://`)\n        * a docker image (must start with `docker://`)\n        * the string literal of a YAML config (must start with `!` or `jtype: `)\n        * the string literal of a JSON config\n\n        When use it under Python, one can use the following values additionally:\n        - a Python dict that represents the config\n        - a text file stream has `.read()` interface\n        ", "name": "uses", "option_strings": ["--uses"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "\n    Dictionary of keyword arguments that will override the `with` configuration in `uses`\n    ", "name": "uses_with", "option_strings": ["--uses-with"], "required": false, "type": "dict"}, {"choices": null, "default": null, "default_random": false, "help": "\n    Dictionary of keyword arguments that will override the `metas` configuration in `uses`\n    ", "name": "uses_metas", "option_strings": ["--uses-metas"], "required": false, "type": "dict"}, {"choices": null, "default": null, "default_random": false, "help": "\n        Dictionary of keyword arguments that will override the `requests` configuration in `uses`\n        ", "name": "uses_requests", "option_strings": ["--uses-requests"], "required": false, "type": "dict"}, {"choices": null, "default": null, "default_random": false, "help": "\nThe customized python modules need to be imported before loading the executor\n\nNote that the recommended way is to only import a single module - a simple python file, if your\nexecutor can be defined in a single file, or an ``__init__.py`` file if you have multiple files,\nwhich should be structured as a python package. For more details, please see the\n`Executor cookbook <https://docs.jina.ai/fundamentals/executor/repository-structure/>`__\n", "name": "py_modules", "option_strings": ["--py-modules"], "required": false, "type": "typing.List[str]"}, {"choices": null, "default": 60639, "default_factory": "random_port", "default_random": true, "help": "The port for input data, default a random port between [49152, 65535]", "name": "port_in", "option_strings": ["--port-in"], "required": false, "type": "int"}, {"choices": null, "default": 35049, "default_factory": "random_port", "default_random": true, "help": "The port for output data, default a random port between [49152, 65535]", "name": "port_out", "option_strings": ["--port-out"], "required": false, "type": "int"}, {"choices": null, "default": null, "default_random": false, "help": "The host address for input, by default it is 0.0.0.0", "name": "hosts_in_connect", "option_strings": ["--hosts-in-connect"], "required": false, "type": "typing.List[str]"}, {"choices": null, "default": "0.0.0.0", "default_random": false, "help": "The host address for input, by default it is 0.0.0.0", "name": "host_in", "option_strings": ["--host-in"], "required": false, "type": "str"}, {"choices": null, "default": "0.0.0.0", "default_random": false, "help": "The host address for output, by default it is 0.0.0.0", "name": "host_out", "option_strings": ["--host-out"], "required": false, "type": "str"}, {"choices": ["PULL_BIND", "PULL_CONNECT", "PUSH_BIND", "PUSH_CONNECT", "SUB_BIND", "SUB_CONNECT", "PUB_BIND", "PUB_CONNECT", "PAIR_BIND", "PAIR_CONNECT", "ROUTER_BIND", "DEALER_CONNECT", "ROUTER_CONNECT"], "default": "PULL_BIND", "default_random": false, "help": "The socket type for input port", "name": "socket_in", "option_strings": ["--socket-in"], "required": false, "type": "str"}, {"choices": ["PULL_BIND", "PULL_CONNECT", "PUSH_BIND", "PUSH_CONNECT", "SUB_BIND", "SUB_CONNECT", "PUB_BIND", "PUB_CONNECT", "PAIR_BIND", "PAIR_CONNECT", "ROUTER_BIND", "DEALER_CONNECT", "ROUTER_CONNECT"], "default": "PUSH_BIND", "default_random": false, "help": "The socket type for output port", "name": "socket_out", "option_strings": ["--socket-out"], "required": false, "type": "str"}, {"choices": null, "default": -1, "default_random": false, "help": "The memory high watermark of this pod in Gigabytes, pod will restart when this is reached. -1 means no restriction", "name": "memory_hwm", "option_strings": ["--memory-hwm"], "required": false, "type": "int"}, {"choices": ["IGNORE", "SKIP_HANDLE", "THROW_EARLY"], "default": "IGNORE", "default_random": false, "help": "\nThe skip strategy on exceptions.\n\n- IGNORE: Ignore it, keep running all Executors in the sequel flow\n- SKIP_HANDLE: Skip all Executors in the sequel, only `pre_hook` and `post_hook` are called\n- THROW_EARLY: Immediately throw the exception, the sequel flow will not be running at all\n\nNote, `IGNORE`, `SKIP_EXECUTOR` and `SKIP_HANDLE` do not guarantee the success execution in the sequel flow. If something\nis wrong in the upstream, it is hard to carry this exception and moving forward without any side-effect.\n", "name": "on_error_strategy", "option_strings": ["--on-error-strategy"], "required": false, "type": "str"}, {"choices": null, "default": false, "default_random": false, "help": "If set, only native Executors is allowed, and the Executor is always run inside ZEDRuntime.", "name": "native", "option_strings": ["--native"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "Informs a Pea that runs in a container. Important to properly set networking information", "name": "runs_in_docker", "option_strings": ["--runs-in-docker"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "The entrypoint command overrides the ENTRYPOINT in Docker image. when not set then the Docker image ENTRYPOINT takes effective.", "name": "entrypoint", "option_strings": ["--entrypoint"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "\nDictionary of kwargs arguments that will be passed to Docker SDK when starting the docker '\ncontainer. \n\nMore details can be found in the Docker SDK docs:  https://docker-py.readthedocs.io/en/stable/\n\n", "name": "docker_kwargs", "option_strings": ["--docker-kwargs"], "required": false, "type": "dict"}, {"choices": null, "default": false, "default_random": false, "help": "Pull the latest image before running", "name": "pull_latest", "option_strings": ["--pull-latest"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "\nThe path on the host to be mounted inside the container. \n\nNote, \n- If separated by `:`, then the first part will be considered as the local host path and the second part is the path in the container system. \n- If no split provided, then the basename of that directory will be mounted into container's root path, e.g. `--volumes=\"/user/test/my-workspace\"` will be mounted into `/my-workspace` inside the container. \n- All volumes are mounted with read-write mode.\n", "name": "volumes", "option_strings": ["--volumes"], "required": false, "type": "typing.List[str]"}, {"choices": null, "default": null, "default_random": false, "help": "\n    This argument allows dockerized Jina executor discover local gpu devices.\n\n    Note, \n    - To access all gpus, use `--gpus all`.\n    - To access multiple gpus, e.g. make use of 2 gpus, use `--gpus 2`.\n    - To access specified gpus based on device id, use `--gpus device=[YOUR-GPU-DEVICE-ID]`\n    - To access specified gpus based on multiple device id, use `--gpus device=[YOUR-GPU-DEVICE-ID1],device=[YOUR-GPU-DEVICE-ID2]`\n    - To specify more parameters, use `--gpus device=[YOUR-GPU-DEVICE-ID],runtime=nvidia,capabilities=display\n    ", "name": "gpus", "option_strings": ["--gpus"], "required": false, "type": "str"}, {"choices": null, "default": "0.0.0.0", "default_random": false, "help": "The host address of the runtime, by default it is 0.0.0.0.", "name": "host", "option_strings": ["--host"], "required": false, "type": "str"}, {"choices": null, "default": 8000, "default_random": false, "help": "The port of the remote machine for usage with JinaD.", "name": "port_jinad", "option_strings": ["--port-jinad"], "required": false, "type": "int"}, {"choices": null, "default": false, "default_random": false, "help": "Do not display the streaming of remote logs on local console", "name": "quiet_remote_logs", "option_strings": ["--quiet-remote-logs"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "\nThe files on the host to be uploaded to the remote\nworkspace. This can be useful when your Pod has more\nfile dependencies beyond a single YAML file, e.g.\nPython files, data files.\n\nNote,\n- currently only flatten structure is supported, which means if you upload `[./foo/a.py, ./foo/b.pp, ./bar/c.yml]`, then they will be put under the _same_ workspace on the remote, losing all hierarchies.\n- by default, `--uses` YAML file is always uploaded.\n- uploaded files are by default isolated across the runs. To ensure files are submitted to the same workspace across different runs, use `--workspace-id` to specify the workspace.\n", "name": "upload_files", "option_strings": ["--upload-files"], "required": false, "type": "typing.List[str]"}, {"choices": null, "default": false, "default_random": false, "help": "The Pea attempts to terminate all of its Runtime child processes/threads on existing. setting it to true basically tell the Pea do not wait on the Runtime when closing", "name": "daemon", "option_strings": ["--daemon"], "required": false, "type": "bool"}, {"choices": ["THREAD", "PROCESS"], "default": "PROCESS", "default_random": false, "help": "The parallel backend of the runtime inside the Pea", "name": "runtime_backend", "option_strings": ["--runtime-backend", "--runtime"], "required": false, "type": "str"}, {"choices": null, "default": "ZEDRuntime", "default_random": false, "help": "The runtime class to run inside the Pea", "name": "runtime_cls", "option_strings": ["--runtime-cls"], "required": false, "type": "str"}, {"choices": null, "default": 600000, "default_random": false, "help": "The timeout in milliseconds of a Pea waits for the runtime to be ready, -1 for waiting forever", "name": "timeout_ready", "option_strings": ["--timeout-ready"], "required": false, "type": "int"}, {"choices": null, "default": null, "default_random": false, "help": "The map of environment variables that are available inside runtime", "name": "env", "option_strings": ["--env"], "required": false, "type": "dict"}, {"choices": null, "default": false, "default_random": false, "help": "If set, expose the public IP address to remote when necessary, by default it exposesprivate IP address, which only allows accessing under the same network/subnet. Important to set this to true when the Pea will receive input connections from remote Peas", "name": "expose_public", "option_strings": ["--expose-public"], "required": false, "type": "bool"}, {"choices": null, "default": 1, "default_random": false, "help": "The number of shards in the pod running at the same time, `port_in` and `port_out` will be set to random, and routers will be added automatically when necessary. For more details check https://docs.jina.ai/fundamentals/flow/topology/", "name": "shards", "option_strings": ["--shards", "--parallel"], "required": false, "type": "int"}, {"choices": null, "default": 1, "default_random": false, "help": "The number of replicas in the pod, `port_in` and `port_out` will be set to random, and routers will be added automatically when necessary", "name": "replicas", "option_strings": ["--replicas"], "required": false, "type": "int"}, {"choices": null, "default": false, "default_random": false, "help": "If set, install `requirements.txt` in the Hub Executor bundle to local", "name": "install_requirements", "option_strings": ["--install-requirements"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "If set, always pull the latest Hub Executor bundle even it exists on local", "name": "force_update", "option_strings": ["--force-update", "--force"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "The executor attached after the Peas described by --uses, typically before sending to all shards, accepted type follows `--uses`", "name": "uses_before", "option_strings": ["--uses-before"], "required": false, "type": "str"}, {"choices": null, "default": null, "default_random": false, "help": "The executor attached after the Peas described by --uses, typically used for receiving from all shards, accepted type follows `--uses`", "name": "uses_after", "option_strings": ["--uses-after"], "required": false, "type": "str"}, {"choices": ["ANY", "ALL", "ALL_ASYNC"], "default": "ANY", "default_random": false, "help": "\nThe polling strategy of the Pod (when `shards>1`)\n- ANY: only one (whoever is idle) Pea polls the message\n- ALL: all Peas poll the message (like a broadcast)\n", "name": "polling", "option_strings": ["--polling"], "required": false, "type": "str"}, {"choices": ["LOAD_BALANCE", "ROUND_ROBIN"], "default": "LOAD_BALANCE", "default_random": false, "help": "The strategy of scheduling workload among Peas", "name": "scheduling", "option_strings": ["--scheduling"], "required": false, "type": "str"}, {"choices": null, "default": false, "default_random": false, "help": "The Pod will be considered an external Pod that has been started independently from the Flow.This Pod will not be context managed by the Flow.", "name": "external", "option_strings": ["--external"], "required": false, "type": "bool"}, {"choices": null, "default": null, "default_random": false, "help": "The hosts of the peas when shards greater than 1.\n        Peas will be evenly distributed among the hosts. By default,\n        peas are running on host provided by the argument ``host``", "name": "peas_hosts", "option_strings": ["--peas-hosts"], "required": false, "type": "typing.List[str]"}, {"choices": null, "default": false, "default_random": false, "help": "The head Pea of this Pod will connect to the TailPea of the predecessor Pod.", "name": "connect_to_predecessor", "option_strings": ["--connect-to-predecessor"], "required": false, "type": "bool"}]}, {"help": "Start a Python client that connects to a remote Jina gateway", "name": "client", "options": [{"choices": null, "default": "0.0.0.0", "default_random": false, "help": "The host address of the runtime, by default it is 0.0.0.0.", "name": "host", "option_strings": ["--host"], "required": false, "type": "str"}, {"choices": null, "default": false, "default_random": false, "help": "If set, respect the http_proxy and https_proxy environment variables. otherwise, it will unset these proxy variables before start. gRPC seems to prefer no proxy", "name": "proxy", "option_strings": ["--proxy"], "required": false, "type": "bool"}, {"choices": null, "default": 46857, "default_factory": "random_port", "default_random": true, "help": "The port of the Gateway, which the client should connect to.", "name": "port", "option_strings": ["--port"], "required": false, "type": "int"}, {"choices": null, "default": false, "default_random": false, "help": "If set, connect to gateway using https", "name": "https", "option_strings": ["--https"], "required": false, "type": "bool"}, {"choices": null, "default": false, "default_random": false, "help": "If set, then the input and output of this Client work in an asynchronous manner. ", "name": "asyncio", "option_strings": ["--asyncio"], "required": false, "type": "bool"}, {"choices": ["GRPC", "HTTP", "WEBSOCKET"], "default": "GRPC", "default_random": false, "help": "Communication protocol between server and client.", "name": "protocol", "option_strings": ["--protocol"], "required": false, "type": "str"}]}, {"help": "Export Jina API to JSON/YAML file for 3rd party applications", "name": "export-api", "options": [{"choices": null, "default": null, "default_random": false, "help": "The YAML file path for storing the exported API", "name": "yaml_path", "option_strings": ["--yaml-path"], "required": false, "type": "typing.List[str]"}, {"choices": null, "default": null, "default_random": false, "help": "The JSON file path for storing the exported API", "name": "json_path", "option_strings": ["--json-path"], "required": false, "type": "typing.List[str]"}, {"choices": null, "default": null, "default_random": false, "help": "The JSONSchema file path for storing the exported API", "name": "schema_path", "option_strings": ["--schema-path"], "required": false, "type": "typing.List[str]"}]}], "name": "Jina", "revision": null, "source": "https://github.com/jina-ai/jina/tree/master", "url": "https://jina.ai", "vendor": "Jina AI Limited", "version": "2.6.5"}